{"expireTime":9007200880323405000,"key":"gatsby-plugin-mdx-entire-payload-e80e9795ed9f88fce1dd477f3ac43806-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Hello!","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":9,"offset":9},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":9,"offset":9},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Link to another note [","position":{"start":{"line":4,"column":1,"offset":11},"end":{"line":4,"column":23,"offset":33},"indent":[]}},{"type":"linkReference","identifier":"hi","label":"Hi","referenceType":"shortcut","children":[{"type":"text","value":"Hi","position":{"start":{"line":4,"column":24,"offset":34},"end":{"line":4,"column":26,"offset":36},"indent":[]}}],"position":{"start":{"line":4,"column":23,"offset":33},"end":{"line":4,"column":27,"offset":37},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":4,"column":27,"offset":37},"end":{"line":4,"column":28,"offset":38},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":11},"end":{"line":4,"column":28,"offset":38},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Hello!\"}","position":{"start":{"line":7,"column":1,"offset":41},"end":{"line":7,"column":47,"offset":87},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":47,"offset":87}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hello!\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"hello\"\n  }, \"Hello!\"), mdx(\"p\", null, \"Link to another note \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Hi\",\n    \"title\": \"Hi\"\n  }, \"[[Hi]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Hello!\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"hello\"\n    }}>{`Hello!`}</h1>\n    <p>{`Link to another note `}<a parentName=\"p\" {...{\n        \"href\": \"/Hi\",\n        \"title\": \"Hi\"\n      }}>{`[[Hi]]`}</a>{``}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}