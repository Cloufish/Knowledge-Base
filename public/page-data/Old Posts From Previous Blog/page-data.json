{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Old Posts From Previous Blog","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Old Posts From Previous Blog\",\n  \"tags\": \"moc, permanent-note\",\n  \"references\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"old-posts-from-previous-blog\"\n  }, \"Old Posts From Previous Blog\"), mdx(\"h2\", {\n    \"id\": \"blogging\"\n  }, \"Blogging\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Why-You-Should-Start-Your-Own-Blog\",\n    \"title\": \"Why You Should Start Your Own Blog\"\n  }, \"[[Why You Should Start Your Own Blog]]\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/How-to-Create-Your-Own-Blog-With-Jekyll\",\n    \"title\": \"How to Create Your Own Blog With Jekyll\"\n  }, \"[[How to Create Your Own Blog With Jekyll]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"blackarch\"\n  }, \"Blackarch\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/2021-01-27-blackarch-zsh-en\",\n    \"title\": \"2021-01-27-blackarch-zsh-en\"\n  }, \"[[2021-01-27-blackarch-zsh-en]]\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/2021-05-30-blackarch-has-its-own-official-image.md\",\n    \"title\": \"2021-05-30-blackarch-has-its-own-official-image.md\"\n  }, \"[[2021-05-30-blackarch-has-its-own-official-image.md]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"note-taking\"\n  }, \"Note-Taking\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/2021-06-12-How-To-Take-Better-Notes\",\n    \"title\": \"2021-06-12-How-To-Take-Better-Notes\"\n  }, \"[[2021-06-12-How-To-Take-Better-Notes]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"others\"\n  }, \"Others:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2020-12-07-is-this-blog-dead-en\",\n    \"title\": \"2020-12-07-is-this-blog-dead-en\"\n  }, \"[[2020-12-07-is-this-blog-dead-en]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-02-12-creating-your-own-docker-pentesting-container\",\n    \"title\": \"2021-02-12-creating-your-own-docker-pentesting-container\"\n  }, \"[[2021-02-12-creating-your-own-docker-pentesting-container]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-03-02-Preparing-your-PHYSICAL-android-device-for-bug-bounty-part-1\",\n    \"title\": \"2021-03-02-Preparing-your-PHYSICAL-android-device-for-bug-bounty-part-1\"\n  }, \"[[2021-03-02-Preparing-your-PHYSICAL-android-device-for-bug-bounty-part-1]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-03-02-Why-should-you-root-your-own-android-device\",\n    \"title\": \"2021-03-02-Why-should-you-root-your-own-android-device\"\n  }, \"[[2021-03-02-Why-should-you-root-your-own-android-device]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-03-21-OWASP-ZAP-as-a-great-fuzzing-tool\",\n    \"title\": \"2021-03-21-OWASP-ZAP-as-a-great-fuzzing-tool\"\n  }, \"[[2021-03-21-OWASP-ZAP-as-a-great-fuzzing-tool]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-03-28-Can-OWASP-ZAP-replace-Burp-Suite-Professional\",\n    \"title\": \"2021-03-28-Can-OWASP-ZAP-replace-Burp-Suite-Professional?\"\n  }, \"[[2021-03-28-Can-OWASP-ZAP-replace-Burp-Suite-Professional?]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-04-05-Learning-on-how-to-build-a-modern-webapp\",\n    \"title\": \"2021-04-05-Learning-on-how-to-build-a-modern-webapp\"\n  }, \"[[2021-04-05-Learning-on-how-to-build-a-modern-webapp]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-04-12-Setting-up-zap-scan-in-cicd-pipeline\",\n    \"title\": \"2021-04-12-Setting-up-zap-scan-in-cicd-pipeline\"\n  }, \"[[2021-04-12-Setting-up-zap-scan-in-cicd-pipeline]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-04-19-Setting-Up-Hashicorp-Vault-To-Manage-Github-Token\",\n    \"title\": \"2021-04-19-Setting-Up-Hashicorp-Vault-To-Manage-Github-Token\"\n  }, \"[[2021-04-19-Setting-Up-Hashicorp-Vault-To-Manage-Github-Token]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-04-26-Preventing-Insufficient-Logging-and-Monitoring\",\n    \"title\": \"2021-04-26-Preventing-Insufficient-Logging-and-Monitoring\"\n  }, \"[[2021-04-26-Preventing-Insufficient-Logging-and-Monitoring]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-05-03-Basics-Of-Kubernetes\",\n    \"title\": \"2021-05-03-Basics-Of-Kubernetes\"\n  }, \"[[2021-05-03-Basics-Of-Kubernetes]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-05-10-Kubernetes-Basics-Hands-On\",\n    \"title\": \"2021-05-10-Kubernetes-Basics-Hands-On\"\n  }, \"[[2021-05-10-Kubernetes-Basics-Hands-On]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-05-17-Security-Of-Docker-Containers\",\n    \"title\": \"2021-05-17-Security-Of-Docker-Containers\"\n  }, \"[[2021-05-17-Security-Of-Docker-Containers]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-05-24-Kubernetes-Basics-Hands-On-Part-2\",\n    \"title\": \"2021-05-24-Kubernetes-Basics-Hands-On-Part-2\"\n  }, \"[[2021-05-24-Kubernetes-Basics-Hands-On-Part-2]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/2021-06-13-Making-Rules-For-IPTables-Firewall-With-UFW\",\n    \"title\": \"2021-06-13-Making-Rules-For-IPTables-Firewall-With-UFW\"\n  }, \"[[2021-06-13-Making-Rules-For-IPTables-Firewall-With-UFW]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Why you should start your own blog\",\n  \"date\": \"2020-05-27 06:46:00 +0100\",\n  \"categories\": [\"Blogging\"],\n  \"tags\": [\"blog\", \"growth\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"There are many doubts among people who are starting professional activity (or those who have not started, but still should) about creating their blog. The benefits of having a blog are enormous, and the effort, once you've practiced, will also be small.\")), mdx(\"h2\", {\n    \"id\": \"so-why-to-prove-your-qualifications-mainly\"\n  }, \"So why? To prove your qualifications! (Mainly)\"), mdx(\"h3\", {\n    \"id\": \"reasons-why-this-will-help-you\"\n  }, \"Reasons Why This Will Help You\"), mdx(\"p\", null, \"Let's consider these reasons from the employer's perspective:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You prove your knowledge of a given topic. To write about something, first, you need to spend a lot of time on research or your contemplation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You show that you have a desire to share knowledge. This is, in a way, proof of your dedication to the topic.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have proven knowledge that will be somewhat practical.\")), mdx(\"h3\", {\n    \"id\": \"just-having-your-internet-corner-will-also-be-convenient-for-you\"\n  }, \"Just having your internet corner will also be convenient for you\"), mdx(\"p\", null, \"You're doing a collection of your reflections on various topics. You have a chance to talk yourself out in your corner. Not only that, but you build your archive of what you have been doing, where you have gone. This sometimes has a different end because you may feel depressed by your laziness, but that's okay! This will lead to motivation.\"), mdx(\"p\", null, \"  You will also improve your \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"writing skills\"), \".\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I think I'm not great at it, but I will get into practice :)\")), mdx(\"h3\", {\n    \"id\": \"dont-think-you-are-not-a-knowledgeable-person-that-is-absurd\"\n  }, \"Don't think you are not a knowledgeable person. That is absurd!\"), mdx(\"p\", null, \"Because the truth is, there will always be someone who knows less than you. Someone who has 3 \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"weeks\"), \" of experience on a broader topic while you have 3\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \" months\"), \" of experience behind you. *\"), mdx(\"h3\", {\n    \"id\": \"creating-a-blog-is-not-that-difficult-and-it-does-not-risk-being-hacked\"\n  }, \"Creating a blog is not that difficult, and It does not risk being hacked\"), mdx(\"p\", null, \"Maybe these conclusions sound like a hat, but the excuses are different. There are technologies like \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Static Site Generators\"), \". Which works extra \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"out of the box\"), \". Their field of attack (scope) is also low due to the lack of databases. I will leave further considerations on the benefits of generators for later posts.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"086b69f7-c638-5650-b018-8cdf27735bc4","fields":{"slug":"/Why You Should Start Your Own Blog","title":"Why You Should Start Your Own Blog"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"In this post, I will cover how to create a blog. We will use the Jekyll static page generator for this. This is a free option and much more efficient, safer. than CMS (including WordPress). However, this post will not go into detail on how Jekyll works or how to code your own page theme\")), mdx(\"h1\", {\n    \"id\": \"why-do-we-use-a-static-page-generator-for-this\"\n  }, \"Why do we use a static page generator for this?\"), mdx(\"p\", null, \"| Advantages | Disadvantages |\\n| - You are able to use Markdown (the language for formatting text) | - There are difficulties in running a blog with many authors |\\n| - It's quick to configure | |\\n| - Does not require huge VPS resources. | |\\n| - It is much safer due to the lack of a database. | |\\n| - It's free | |\\n| - You are able to edit the page code (if you can) | |\"), mdx(\"p\", null, \"That it wasn't. Creating a blog using CMS (WordPress or Drupal) is not a bad thing. However, I am presenting a way more budgetary here.\"), mdx(\"h2\", {\n    \"id\": \"step-1---choosing-the-theme-of-our-website\"\n  }, \"STEP 1 - Choosing the theme of our website\"), mdx(\"p\", null, \"Here are a few pages to help us with this:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jamstackthemes.dev/ssg/jekyll/\"\n  }, \"https://jamstackthemes.dev/ssg/jekyll/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://jekyllthemes.org/\"\n  }, \"http://jekyllthemes.org/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jekyllthemes.io/\"\n  }, \"https://jekyllthemes.io/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jekyllthemes.io/\"\n  }, \"https://jekyllthemes.io/\"))), mdx(\"p\", null, \"Some themes are paid on these sites, many of them are free. In the search engine, we are able to enter keywords that are more interesting in the appearance of the page.\\nHowever, there are many more factors to consider than just whether the look \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \" \\\"I like\\\" \"), \":\"), mdx(\"p\", null, \"We should check the theme design on GitHub too:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See if the creator is responding to \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \" issues \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"whether the configuration files are readable.\\nI say this because most of the creators of these themes are Chinese and not all of them make a blog for international users, and can only do for China.\")), mdx(\"p\", null, \"When we manage to choose a theme, we enter its project in GitHub and fork it to our account.\"), mdx(\"p\", null, \"Now it remains for us to clone the project from our repository\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git clone https://github.com/<our-username>/<our-repository>.git\")), mdx(\"h2\", {\n    \"id\": \"step-2---get-familiar-with-the-file-structure\"\n  }, \"STEP 2 - Get familiar with the file structure\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\u251C\\u2500\\u2500 _date\\n\\u251C\\u2500\\u2500 _includes\\n\\u251C\\u2500\\u2500 _layouts\\n\\u251C\\u2500\\u2500 _posts # Place for our posts.\\n\\u251C\\u2500\\u2500 _scripts\\n\\u251C\\u2500\\u2500 assets\\n\\u251C\\u2500\\u2500 tabs\\n\\u2502 \\u2514\\u2500\\u2500 about.md # \\\"About me\\\" page\\n\\u251C\\u2500\\u2500 .gitignore\\n\\u251C\\u2500\\u2500 404.html\\n\\u251C\\u2500\\u2500 Gemfile\\n\\u251C\\u2500\\u2500 LICENSE\\n\\u251C\\u2500\\u2500 README.md\\n\\u251C\\u2500\\u2500 _config.yml # Configuration file\\n\\u251C\\u2500\\u2500 docs\\n\\u251C\\u2500\\u2500 feed.xml\\n\\u251C\\u2500\\u2500 index.html\\n\\u251C\\u2500\\u2500 robots.txt\\n\\u2514\\u2500\\u2500 sitemap.xml\\n\\n``\\n\\nIt should be mentioned right away that this is an example of the file structure I work on. It doesn't have to match 100% of yours. However, these folders with the comment next to them must always exist, and most of them will be the ones we will work on.\\n\\n## STEP 3 - Supplementing the configuration file config.yml\\n\\n\\nThere is no deeper philosophy here. We just need to complete it. Each creator here creates a differently arranged file, but the variables also remain unchanged.\\n\\n## STEP 4 - Local site hosting\\n\\n### Installing Jekyll\\n\\nIn general, we should always host the site locally first. Finally, I have to bring up the Jekyll installation. Follow the instructions in Jekyll's documentation https://jekyllrb.com/docs/installation/\\n\\n### Alternative - Docker container with Jekyll\\n\\nInstalling Jekyll and its dependencies are sometimes troublesome. Containerization will solve this problem for us.\\nFor this, I assume you already have Docker installed. To containerize Jekyll, go to the main theme folder and enter the command\\n``` bash\\ndocker run --rm --volume = \\\"$ PWD: / srv / jekyll\\\" -p 4000: 4000 jekyll / jekyll: 4.0 jekyll serve\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"--rm - removes the container when we are done hosting locally\\n--volume = \\\"$ PWD: / srv / jekyll\\\" - We put the contents of the directory we are in to the directory / srv / jekyll where we expect files.\\n-p 4000: 4000 - We open the port 4000 through which we can connect to the site\\njekyll / jekyll: 4.0 - define the application image here. The value after the colon represents the version (we should never use the newest)\\njekyll serve - Specify the command to be executed after starting the container.\")), mdx(\"p\", null, \"And that's practically it. However, it would be troublesome to type this command every time. Docker-compose is the solution! For this we create the docker-compose.yml file and give it the content:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"# docker run --rm --volume = \\\"$ PWD: / srv / jekyll\\\" -p 4000: 4000 jekyll / jekyll: 4.0 jekyll serve\\n\\nversion: '3'\\nservices:\\n  jekyll serve:\\n    image: jekyll / jekyll: 4.0\\n    volumes:\\n      - '.: / srv / jekyll'\\n    ports:\\n      - 4000: 4000\\n    command: 'jekyll serve'\\n\\n\")), mdx(\"p\", null, \"Now, thanks to this, we can turn the application on and off with one command :)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \" docker-compose up\\n\")), mdx(\"p\", null, \"`` bash\\ndocker-compose down\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\n## Writing your first post\\n\\n Most of your posts will end up in the _posts folder. However, the text file must meet several conditions:\\n - Its name must begin with a date in the American syntax, eg \\\"2020-05-31\\\". So the final name must be YEAR-MONTH-DAY-NAME-OF YOUR-FAST.md\\n - Must have so-called \\\"front matter\\\". You can read about it here -> https://jekyllrb.com/docs/step-by-step/03-front-matter/\\n  - And of course, we write its content in markdown. It is not as difficult a matter as it seems. It is even more convenient;)\\n\\n  **That's it for the first part about creating a blog. In the next one I will try to discuss how to host your blog on GitHub Pages - also free, non-scary hosting. I encourage you to review on your own and complete your knowledge:\\n  - Technical documentation [ENG]\\n  - Youtube course from giraffe.academy [ENG] https://www.youtube.com/watch?v=T1itpPvFWHI&list=PLLAZ4kZ9dFpOPV5C5Ay0pHaa0RJFhcmcB**\\n\\nexport const _frontmatter = {\\\"title\\\":\\\"How to create your own blog - Jekyll\\\",\\\"date\\\":\\\"2020-05-27 06:46:00 +0100\\\",\\\"categories\\\":[\\\"Blogging\\\",\\\"Jekyll\\\"],\\\"tags\\\":[\\\"blog\\\",\\\"growth\\\",\\\"jekyll\\\",\\\"free\\\"],\\\"lang\\\":\\\"en\\\"}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"9bb43e93-594c-5b1a-9c13-5836dedeae00","fields":{"slug":"/How to Create Your Own Blog With Jekyll","title":"Why do we use a static page generator for this?"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"blackarch-zsh - Ideal Docker container for hacking!\",\n  \"date\": \"2021-01-27 08:46:00 +0100\",\n  \"categories\": [\"Docker\", \"blackarch-zsh\"],\n  \"tags\": [\"docker\", \"pentesting lab\", \"personal projects\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"blackarch-zsh\"\n  }, \"blackarch-zsh\"), mdx(\"p\", null, \"blackarch-zsh is my docker container that pre-configured with shell, environment tweaks while additional tools that (I found) helpful to my daily needs are installed.\"), mdx(\"p\", null, \"It also downloads non-blackarch-tools that are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"not\"), \" in blackarch \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.blackarch.org/tools.html\"\n  }, \"repository\")), mdx(\"h3\", {\n    \"id\": \"why-blackarch-why-not-container-based-on-kali\"\n  }, \"WHY BLACKARCH? Why not container based on Kali\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The answer is simple. With Blackarch it's way easier to install packages with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pacman -Syu <package_name>\"), \" to install or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pacman -Ss <package_name>\"), \" to search for package.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are way more tools available on Blackarch, even those that are not mainstream. With Kali, you're stuck with packages that the devs chose to add\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's way easier to ask for help if a given tool has some errors, because there's blackarch Discord server.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I'm not saying that there's no great community for Kali, I just find it way more accessible in blackarch.\")), mdx(\"h3\", {\n    \"id\": \"cons-of-using-blackarch\"\n  }, \"CONS OF USING BLACKARCH\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you're not proficient in Linux, or have never used Arch based OS, then you might struggle a bit with solving issues on your own. Though If we're saying about arch specific skills required to use this container then it's mostly knowledge about \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pacman\"), \" package manager.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Also, keep in mind, that it's mostly all about feeling confident with the OS you use, if you like Debian based apt package manager, nothing stops you from using it in Kali container. Though this container will probably remain blackarch based.\")), mdx(\"h3\", {\n    \"id\": \"usage---blackarch-zsh\"\n  }, \"USAGE - blackarch-zsh\"), mdx(\"p\", null, \"All you have to do to install this container is cloning this repo:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git clone https://github.com/Cloufish/dockerfiles.git\")), mdx(\"p\", null, \"OR just wget docker-compose:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wget https://raw.githubusercontent.com/Cloufish/dockerfiles/master/blackarch-zsh/docker-compose.yml \")), mdx(\"p\", null, \" and then in cloned folder/in folder where docker-compose.yml file is, execute:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose up\")), mdx(\"p\", null, \"IF the docker-compose didn't attached you to the container you can do this with:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker attach blackarch-zsh\"), \" while docker-compose is still running\"), mdx(\"p\", null, \"To stop the container type:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose down\"), \"\\nor Ctrl + c to gracefully exit the container\"), mdx(\"p\", null, \"This machine will be run always, unless you stopped it manually with 'docker stop'\"), mdx(\"h3\", {\n    \"id\": \"but-i-dont-want-to-use-your-container-with-all-these-packages-installed\"\n  }, \"But... I don't want to use your container with all these packages installed...\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't worry, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"blackarch-zsh-minimal\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hub.docker.com/r/cloufish/blackarch-zsh-minimal\"\n  }, \"HERE\"), \" is a version that has only installed basic packages like python, ruby, bundler and tweaks to the shell and environment.\")), mdx(\"h3\", {\n    \"id\": \"contributing\"\n  }, \"CONTRIBUTING\"), mdx(\"p\", null, \"I am not an expert in building docker images and Dockerfiles, if you think you could solve the issue from TODO section, I would really appreaciate it\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"18702f8a-ee68-5c10-a953-076975fa2098","fields":{"slug":"/Old-Posts/2021-01-27-blackarch-zsh-en","title":"2021-01-27-blackarch-zsh-en"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Blackarch has it's own official docker image!\",\n  \"date\": \"2021-05-30 08:46:00 +0100\",\n  \"categories\": [\"Docker\", \"blackarch-zsh\"],\n  \"tags\": [\"docker\", \"pentesting lab\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"you-can-find-it-here\"\n  }, \"You can find it \", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://hub.docker.com/r/blackarchlinux/blackarch\"\n  }, \"HERE\")), mdx(\"h2\", {\n    \"id\": \"thats-amazing-news\"\n  }, \"That's amazing news.\"), mdx(\"p\", null, \"Having an official and stable container will make it much easier to develop other blackarch containers, and I wish there was one when I was creating my container image.\"), mdx(\"h2\", {\n    \"id\": \"is-blackarch-zsh-useless-now\"\n  }, \"Is blackarch-zsh useless now?\"), mdx(\"p\", null, \"I don't think that.\"), mdx(\"h3\", {\n    \"id\": \"the-size-of-blackarchlinux-official-vs-blackarch-zsh-minimal\"\n  }, \"The size of blackarchlinux official vs blackarch-zsh-minimal\"), mdx(\"p\", null, \"The official blackarch provides the most minimal setup possible, with mainly blackarch keyring imported.\"), mdx(\"p\", null, \"blackarch-zsh-minimal provides some tweaking, imported configs, tmux sessions set up, go, python setup and many other things!\"), mdx(\"p\", null, \"While this minimalistic approach is completely fine, an average or even beginner Linux user trying out using blackarch official container may be confused, because of lack of sudo command, and many others commands that he uses on a daily basis.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"But let's face the truth\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"blackarchlinux official has size of \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"400MB\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"blackarch-zsh-minimal has size of \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2.1GB\"))), mdx(\"p\", null, \"So I have to learn a lesson, and at least reduce it's size to 1GB.\"), mdx(\"h3\", {\n    \"id\": \"ive-created-blackarch-zsh-without-being-and-expert-of-archlinux\"\n  }, \"I've created blackarch-zsh without being and expert of archlinux\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"So without a doubt, they did many things better, and while I was creating my image, I did ask a lot of questions to them\")), mdx(\"h2\", {\n    \"id\": \"but-i-still-hope-that-the-workarounds-in-my-dockerfile-will-help\"\n  }, \"But I still hope, that the workarounds in my Dockerfile will help.\"), mdx(\"p\", null, \"And maybe give you a hint of how to solve your problems when creating docker-image\"), mdx(\"h2\", {\n    \"id\": \"summary\"\n  }, \"Summary\"), mdx(\"p\", null, \"This blog-post is small, I know. I mainly wanted to share with you an information that there's a blackarch official image that you can use.\\nCheers :)\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"aea676a9-85b4-5035-b3a2-b20e50b9c9f4","fields":{"slug":"/Old-Posts/2021-05-30-blackarch-has-its-own-official-image.md","title":"2021-05-30-blackarch-has-its-own-official-image.md"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to Take Better Notes?\",\n  \"date\": \"2021-06-12 08:46:00 +0100\",\n  \"categories\": [\"Productivity\", \"Note-Taking\"],\n  \"tags\": [\"productivity\", \"note-taking\", \"zettelkasten\", \"evergreen\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"disclaimer\"\n  }, \"Disclaimer\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This content comes from the Book \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.amazon.com/How-Take-Smart-Notes-Nonfiction/dp/1542866502\"\n  }, \"How to Take Smart Notes\"), \"\\nand \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://evergreennotes.com/\"\n  }, \"Evergreen\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If you're interested in diving deeper into psychological aspects, or you feel unconvinced or just because you need, feel free to reach those resources (or ask me questions, preferably! :D)\")), mdx(\"h2\", {\n    \"id\": \"why-even-do-note-taking\"\n  }, \"Why even do Note-Taking?\"), mdx(\"p\", null, \"Because:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"We shouldn't rely on our brain\"), \" - Our brain is perfect at storing information - but this applies to the information that is \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"relevant\"), \" to use in a particular situation, e.g. at work!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Researchers say that \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"we can only store 7 things in our brain in the current time\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you've ever began to write yourself an article, you'll feel that you're stuck and can't come up with anything \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"that would have a structure!\"), \". By taking proper notes \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"You won't ever start from scratch!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Every question comes from previous research done. If you don't do notes, then you're missing stumbling on many awesome ideas!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Note-Taking will make you more motivated and engaged\"))), mdx(\"h2\", {\n    \"id\": \"what-is-smart-note-taking\"\n  }, \"What is Smart Note-Taking?\"), mdx(\"p\", null, \"In my opinion, it is Note-Taking that relies on Zettelkasten and Evergreen note-taking. Providing you with structure in your Note-Taking!\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Note-Taking is an investment\"), \" - you may think that you're wasting time note-taking, but this thought is short-sighted.\")), mdx(\"h2\", {\n    \"id\": \"what-is-zettelkasten\"\n  }, \"What is Zettelkasten?\"), mdx(\"p\", null, \"It is an approach in which you link \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"atomic\"), \" (small, covering one \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"concept\"), \" notes), creating a 'environment' to create new insights, links to the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"thoughts\"), \".\"), mdx(\"p\", null, \"The Zettelkasten Theory is advised to everyone! No matter If you're an academic researcher or not - If you write, you need to connect your thoughts - often those which introduce completely different approaches.\"), mdx(\"h2\", {\n    \"id\": \"what-is-evergreen\"\n  }, \"What is Evergreen?\"), mdx(\"p\", null, \"It is also an approach to Note-Taking.\\nSimilar to Zettelkasten.\"), mdx(\"h2\", {\n    \"id\": \"differences-between-evergreen-and-zettelkasten\"\n  }, \"Differences Between Evergreen and Zettelkasten:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Zettelkasten\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Evergreen\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Recommends doing Reviews of your notes in a spaced-repetition manner, to avoid the chaos in your notes\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Doesn't enforce this rule\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Your Zettelkasten should be your \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"second brain\"), \", and so It shouldn't specifically for the public\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Doesn't give any advices to that\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"You should follow the note types of \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Fleeting Notes\"), \", \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Permanent Notes\"), \" and \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Literature Note\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"It recommends tagging, but doesn't give specifics names of them\")))), mdx(\"p\", null, \"So the main difference between these two systems is that \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Evergreen gives you more flexibility\")), mdx(\"h1\", {\n    \"id\": \"rules-of-smart-note-taking\"\n  }, \"Rules of Smart-Note Taking\"), mdx(\"p\", null, \"Most of these rules focus on making it easier for us to make connections and links:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Your Notes Should Be \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Atomic\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Your Notes Should Be \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Concept Oriented\"), \" instead of by topic or date\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You Should Link your Notes\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You Should Be sticking to the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"note types\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You Should Do Reviews of these notes\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You Should Translate Everything into \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Your own words!\"))), mdx(\"p\", null, \"Let's cover each of these rules.\"), mdx(\"h2\", {\n    \"id\": \"1-you-should-link-your-notes\"\n  }, \"1. You should link your Notes.\"), mdx(\"p\", null, \"That is the main rule of the Zettelkasten, and other rules help it to create these links.\"), mdx(\"h3\", {\n    \"id\": \"how-to-accomplish-this\"\n  }, \"How to accomplish this?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"It's way easier to use digital note-taking software than to make physical notes\"), \", I recommend:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://obsidian.md/\"\n  }, \"Obsidian\"), \" - The free, open-source version, that sed \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"markdown syntax.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://roamresearch.com/\"\n  }, \"ROAM Research\"))))), mdx(\"h2\", {\n    \"id\": \"2-your-notes-should-be-atomic\"\n  }, \"2. Your Notes Should Be Atomic:\"), mdx(\"p\", null, \"Means it should \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cover\"), \" one concept, but also you shouldn't feel limited and cover entirety of this concept.\"), mdx(\"p\", null, \"The atomicity will make it easier for you to link the Notes\"), mdx(\"h3\", {\n    \"id\": \"how-to-accomplish-this-1\"\n  }, \"How to accomplish this?\"), mdx(\"p\", null, \"There's no a strict solution. You just need to pay attention to that - If you see that your writing too broad, then create a new note, covering this concept. Howeveeer...\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Do reviews of your notes\"), \" - to see what notes could be divided into smaller, atomic ones\")), mdx(\"h2\", {\n    \"id\": \"3-your-notes-should-be-concept-oriented\"\n  }, \"3. Your Notes Should Be Concept Oriented\"), mdx(\"p\", null, \"Many of us - especially in school are learned to segregate your notes into Notebooks, and in these notebooks write topics.\\nThis makes it way harder for us to create links\"), mdx(\"p\", null, \"It's better to visualize this problem with segregating your notes by Date - Sure, It makes sense with diary, but not with note-taking.\"), mdx(\"p\", null, \"Each book, topic cover many concepts (Refer to the rule about atomicity of your notes) and so you shouldn't be writing again and again about the same concepts from different books.\"), mdx(\"h3\", {\n    \"id\": \"how-to-accomplish-this-2\"\n  }, \"How to accomplish this?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Seek what concepts are missing, different\"), \", but are covered in a book or a topic.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Follow the rule about making your Notes atomic\"), \" -\")), mdx(\"h2\", {\n    \"id\": \"4-you-should-be-sticking-to-the-note-types\"\n  }, \"4. You should be sticking to the Note Types\"), mdx(\"p\", null, \"There are 3 of them\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fleeting Note Type\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Literature Note Type\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent Note\")), mdx(\"p\", null, \"Not keeping track of them would mean to either:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Notes not building up a critical mass\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You won't be able to spot the good/important ideas from those less important.\\nWe'll cover each of them.\")), mdx(\"h3\", {\n    \"id\": \"fleeting-note-type\"\n  }, \"Fleeting Note Type\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Should be deleted after 3 days of writing them to create Permanent Note\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Purpose of them:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To support working memory\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Act as reminders\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can be written however you'd like\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Capture ideas while you're busy doing something else.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use them:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When you're in a conversation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Listening to a lecture\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you got an idea, but it's not time to focus on it fully\")), mdx(\"h3\", {\n    \"id\": \"literature-note-type\"\n  }, \"Literature Note Type\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To take notes while listening to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lecture\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"course\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"book\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The threshold in making them needs to be bigger than in \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Fleeting Note\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I really like copying the Table of Contents from the Book to my Literature Note to easier reference particular section.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Should be deleted or archived\")), mdx(\"h3\", {\n    \"id\": \"permanent-note-type\"\n  }, \"Permanent Note Type\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Should be well thought\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Contain all necessary information\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can be understood without the context\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Need to be written in details\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Have potential to inspire when writing new piece\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Needs to have the same format\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Permanent Note is made FROM Literature and Fleeting Notes\"), \" - Shouldn't be made on the first try.\"), mdx(\"h2\", {\n    \"id\": \"5-you-should-do-reviews-of-these-notes\"\n  }, \"5. You Should Do Reviews of these notes\"), mdx(\"p\", null, \"Because it's all meaningless, if you don't review these notes. They will **accumulate, and you'll lose yourself in them. After a while you'd probably think that it'd be better to start from the beginning.\"), mdx(\"p\", null, \"Also, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"creation of your notes is a \", mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"process\")), \".\\nBecause of that you should review each type of these notes with the following priority:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fleeting Notes\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Literature Notes that are not archived\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Permanent Notes\")), mdx(\"h3\", {\n    \"id\": \"fleeting-note-review\"\n  }, \"Fleeting Note Review:\"), mdx(\"p\", null, \"The purpose of reviewing Fleeting notes is to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"delete the fleeting note\"), \"\\nYou should spot and extract the best ideas from them, and essentially \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"make it so the extracted idea/thought follows the concepts of Permanent Notes\")), mdx(\"h3\", {\n    \"id\": \"literature-note-review\"\n  }, \"Literature Note Review\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Also should lead to extracting ideas, but the notes covering these ideas should point/link to the archived Literature Note as a reference.\")), mdx(\"h3\", {\n    \"id\": \"permanent-note-review\"\n  }, \"Permanent Note Review\"), mdx(\"p\", null, \"Because it is the main Note Type and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"because these note-types are meant to be understood without context\"), \", we should pay attention to the Notes marked as 'Permanent'.\"), mdx(\"p\", null, \"I recommend reviewing these notes by picking them randomly, with closed eyes even.\"), mdx(\"h2\", {\n    \"id\": \"6-you-should-translate-everything-into-your-own-words\"\n  }, \"6. You Should Translate Everything into Your own words!\"), mdx(\"p\", null, \"It's easy for us to say while reading or watching on a certain topic\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"...You know what I mean\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Oh, I'm learning!\"), \",\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Ah, right, I knew that!\"), \".\")), mdx(\"p\", null, \"When the reality is way different.\\nYou should translate your thinking in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"every note type\"), \", no matter if It's Fleeting, Permanent or Literature.\"), mdx(\"h3\", {\n    \"id\": \"questions-to-ask-yourself-when-translating\"\n  }, \"Questions to Ask Yourself When Translating:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"How does this fact fit into my idea of ...?\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"How can this phenomenon be explained by that theory?\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Are these two ideas contradictory or do they complement each other?\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Isn't this argument similar to that one?\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Haven't I heard this before?\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"What does x mean for y?\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Why is that important in my thinking?\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"You need to know if an idea/questions adds anything to the topic.\"))), mdx(\"h2\", {\n    \"id\": \"tips-and-other-advices-in-note-taking\"\n  }, \"TIPS AND OTHER ADVICES IN NOTE-TAKING\"), mdx(\"h3\", {\n    \"id\": \"dont-feel-stressed-out-in-your-note-taking\"\n  }, \"Don't feel stressed out in your Note-Taking\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Consider Note-Taking as a Process\"), \" - You're note-taking should reflect your thinking. It changes all the time. You'll probably have other Notes structure months or years after you've begun making notes. \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"That's okay!\"))), mdx(\"h3\", {\n    \"id\": \"do-notes-mainly-for-yourself\"\n  }, \"Do Notes mainly for Yourself!\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You won't be overwhelmed by what the reader needs to know\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you make \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"yourself\"), \" understand that topic, it will get easier to explain it, write and article to the audience.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Even one \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Permanent notes\"), \" won't cover everything that audience needs instantly.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Multiple \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Permanent notes\"), \" would! But it comes with time - remember, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"it's a process\"), \"!\")))), mdx(\"h3\", {\n    \"id\": \"seek-practicality-with-your-note-taking\"\n  }, \"Seek Practicality With Your Note-Taking\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Will you publish these topics in the notes? Talk about the topics you've done research on?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Because If not, you may want to research on as little as possible, to only meet your needs. Nobody expects from you a well-done research paper on every topic. Do what feels for you - seek the highest\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Return of Investment\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Only make notes to help your thinking\")), mdx(\"h3\", {\n    \"id\": \"dont-repeat-yourself-in-your-note-taking\"\n  }, \"Don't repeat yourself in your Note-Taking\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It will bring more burden.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you feel urge to do that, then do this for \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Permanent Notes\"))), mdx(\"h3\", {\n    \"id\": \"dont-focus-on-the-indexes-mocs\"\n  }, \"Don't Focus on the indexes (MOCs)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Because It's not about Planning. \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Become an Expert Instead of a Planner\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We also want to think with our notes, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"not about the notes.\"))), mdx(\"h3\", {\n    \"id\": \"focus-on-permanent-notes\"\n  }, \"Focus on Permanent Notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Because \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"that's the main goal in Note-Taking - create well-thought note\"))), mdx(\"h2\", {\n    \"id\": \"for-a-quick-overview-heres-graph-view-of-my-notes-in-obsidian\"\n  }, \"For a quick overview, here's Graph View of my notes in Obsidian\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"by the day of 2021-06-05:\"), \"\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/jZ1o9bt.png\",\n    \"alt\": \"graph view\"\n  })), mdx(\"p\", null, \"As you can see, it is pretty messy\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Too many untagged or fleeting notes, So I definitely need to do more reviews on them.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"And there are probably too many Permanent Notes that are not well-thought, which requires reviews.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Too many MOCs - but I really like to have a more categorized notes, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"while remembering to link notes no matter which category they are in\"), \"u\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"164219cb-99f0-5da5-87b1-52e8ea6d8468","fields":{"slug":"/Old-Posts/2021-06-12-How-To-Take-Better-Notes","title":"Rules of Smart-Note Taking"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Is this blog dead?\",\n  \"date\": \"2020-12-07 06:46:00 +0100\",\n  \"categories\": [\"Life\"],\n  \"tags\": [\"blog\", \"plans\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"admission-word\"\n  }, \"Admission word...\"), mdx(\"p\", null, \"It's been quite a few months since the last post - as many as 6 (it's scary!). By answering the question in the subject right away. Is not. I also don't want it to be. You could say that I was constantly thinking about the blog and every week these thoughts were scrolling like \\\"I'll write a post about what I've been doing!\\\", Or \\\"I'll add a\\\" Resources \\\"tab on the blog for more beginners than me, or\\\" I'll do a marathon with Hack The Box. and I will share my knowledge.\\\"\"), mdx(\"p\", null, \"And here I must admit, I have a lot of ideas, even this confusion in my head did not give me enough focus to write this post, start a marathon. There was always an excuse like \\\"Ah! Maybe I'll make a container in Docker\\\" / \\\"I'll program in bash! Then the BugBounty marathon\\\". This is obviously not a catastrophe of what I did. Because in the end, I didn't completely stand still, although the holiday burnout made me understand that maybe having technical knowledge was not enough. I have a lot to improve in soft skills and constant self-improvement is my obsession: p.\"), mdx(\"h2\", {\n    \"id\": \"further-plans\"\n  }, \"Further Plans\"), mdx(\"p\", null, \"But it's worth making plans and when will the posts and these ideas resume!\\nI warn you in advance that it will be after January 22nd. There are vocational exams for technical schools around these days. Rather, I want to contribute to it and have a free mindset of improvement.\\nSo let's get down to business;)\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You will see the topic of how to host a blog on GitHub\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"An overview of how to use Docker and docker-compose will appear, and an overview of the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Cloufish/dockerfiles\"\n  }, \"blackarch-zsh\"), \" project. Which I think is a much better solution than the resource-hungry Kali Linux in the Virtual Machine\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"There will be an overview of the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Cloufish/bug_bounty_framework\"\n  }, \"bugbounty-framework-project\"), \" and encouragement to automate tasks using programming languages\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Overview of the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Cloufish/bug_bounty_framework\"\n  }, \"Worldwide ITSec Specialists\"), \" project will appear\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"After that / Be and in progress I think we'll start with a bang by doing Hack The Boxy and THM (if you win prizes on \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://tryhackme.com/room/adventofcyber2\"\n  }, \"Advent of Cyber \\u200B\\u200B2\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"I will also discuss the subject of Bug-Hunting, my motivational crap (; P)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Something I want to touch upon and discuss is the programming language \\\"nim\\\", which is by principles elegant, expressive, effective, open-source, has a great community, and has an encouraging future. I've already read a bit about him ;) and I'm really excited!\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Other topics, not related to ITSec, such as language learning, music, playing the guitar, but in this, I have an even bigger Impostor-Syndrome than in ITSec hah, we'll see, I have some valuable topics, although I am of course a constant student, not an expert :)\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"907a8fd9-3485-5bdd-84f6-ae8efe99b4f8","fields":{"slug":"/Old-Posts/2020-12-07-is-this-blog-dead-en","title":"2020-12-07-is-this-blog-dead-en"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"blackarch-zsh - How I created blackarch-zsh AND How you can create your own too :)\",\n  \"date\": \"2021-02-12 08:46:00 +0100\",\n  \"categories\": [\"Docker\", \"blackarch-zsh\"],\n  \"tags\": [\"docker\", \"pentesting lab\", \"personal projects\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"then-how-do-i-create-my-own\"\n  }, \"Then how do 'I' create my own?\"), mdx(\"p\", null, \"Wait, wait buddy! not so fast!\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"I think the best way to learn it is from me - while explaining how my \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Dockerfile\"), \" is structured.\\nSo let's begin, because we have a lot of stuff to process :)  \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"FROM archlinux:latest\\nENV USER_ID 1000\\nENV GROUP_ID 1000\\nCOPY ./pacman.conf /etc/pacman.conf\\nRUN pacman --sync --refresh --sysupgrade --noconfirm core/filesystem core/sudo && \\\\\\nfind / -type f '(' -name '*.pacnew' -or -name '*.pacsave' ')' -delete 2> /dev/null\\nCOPY ./sudoers /etc/sudoers\\nRUN chmod 440 /etc/sudoers && \\\\\\ngroupadd --gid $GROUP_ID penelope && \\\\\\nuseradd --uid $USER_ID --gid $GROUP_ID --groups wheel --create-home penelope\\nRUN export TERM=xterm && curl --silent --show-error https://blackarch.org/strap.sh | bash\\nCOPY ./entrypoint.sh /\\nWORKDIR /home/penelope\\n\\n\\nRUN pacman --needed --noconfirm -Syu curl \\\\\\n        wget \\\\\\n        git \\\\\\n        go \\\\\\n        python \\\\\\n        python-pip \\\\\\n        iputils \\\\\\n        ruby \\\\\\n        zsh \\\\\\n        gcc \\\\\\n        openvpn \\\\\\n        tmux \\\\\\n        man-db \\\\\\n        sudo \\\\\\n        man-pages \\\\\\n        nodejs \\\\\\n        base-devel \\\\\\n        yarn \\\\\\n        vim \\\\\\n        vi \\\\\\n        npm \\\\\\n        postgresql \\\\\\n        ruby-bundler \\\\\\n        zsh-syntax-highlighting\\n\\n#Setting up password for penelope\\nUSER root\\nRUN echo \\\"penelope:penelope\\\" | chpasswd\\n\\n\\nUSER penelope\\n\\n\\n# Setting up zsh and getting Luke Smith's .zshrc and installing oh-my-zsh\\n\\nRUN sh -c \\\"$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)\\\" && \\\\\\nrm ~/.zshrc && \\\\\\nwget https://raw.githubusercontent.com/Cloufish/voidrice/master/.config/zsh/.zshrc -O ~/.zshrc && \\\\\\necho 'penelope' > chsh -s /usr/bin/zsh\\n\\n# DOING THE SAME FOR ROOT USER\\nUSER root\\nRUN sh -c \\\"$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\\\" && \\\\\\nrm ~/.zshrc && \\\\\\nwget https://raw.githubusercontent.com/Cloufish/voidrice/master/.config/zsh/.zshrc -O ~/.zshrc && \\\\\\nchsh -s /usr/bin/zsh\\n\\n# Setting up tmux\\n\\nUSER penelope\\nRUN mkdir ~/.config/ && \\\\\\ncd ~/.config/ && \\\\\\ngit clone https://github.com/gpakosz/.tmux.git && \\\\\\necho \\\"set -g default-command /usr/sbin/zsh\\\" >>  ~/.config/.tmux/.tmux.conf.local && \\\\\\nln -s -f ~/.config/.tmux/.tmux.conf ~/.tmux.conf && \\\\\\ncp ~/.config/.tmux/.tmux.conf.local ~/.tmux.conf.local\\n\\nRUN wget https://raw.githubusercontent.com/LukeSmithxyz/voidrice/master/.config/nvim/init.vim && \\\\\\nmkdir ~/.config/nvim && \\\\\\nmv init.vim ~/.config/nvim && \\\\\\ncp ~/.config/nvim/init.vim ~/ &&\\\\\\nmv init.vim .vimrc && \\\\\\n\\n# Setting up man and bat\\n\\nexport MANPAGER=\\\"sh -c 'col -bx | bat -l man -p'\\\" # Setting up environment for non-blackarch-tools and other tools, probably the most important part\\n\\nRUN mkdir /home/penelope/PATH && \\\\\\n\\nmkdir -p /home/penelope/.gem/ruby/2.7.0/bin && \\\\\\nmkdir -p /home/penelope/.local/bin && \\\\\\ngit clone https://github.com/Cloufish/non_blackarch_tools.git && \\\\\\ncp /home/penelope/non_blackarch_tools/exploit_databases_init.sh /home/penelope\\n\\nUSER root\\nRUN chmod +x /home/penelope/non_blackarch_tools/install.sh\\n\\n\\n\\nRUN pacman -Syyu --noconfirm \\n\\nRUN sed  -i 's/^# Server/Server/' \\\"/etc/pacman.d/blackarch-mirrorlist\\\"\\n\\nRUN pacman --needed --noconfirm --overwrite='*' -Syu tmux gcc git vim wget tzdata curl iputils make nmap whois openvpn go python python3 perl jq hq yq nikto subbrute net-tools nano sqlmap cpanminus python-pycurl python-dnspython libxml2 python hydra powerline bat exploitdb beef\\n\\nRUN pacman --needed --noconfirm --overwrite='*' -Syu gobuster metabigor joomlascan sublist3r wfuzz beef corsy gdb adb exploitpack radare2\\n\\nRUN pacman --needed --noconfirm --overwrite='*, usr/lib/python3.8/site-packages/termcolor-1.1.0-py3.8.egg-info/*' -Syu amass aquatone metabigor gospider subfinder subover webanalyze man parallel unzip dex2jar jadx  assetfinder \\n\\nRUN pacman --needed --noconfirm --overwrite='*' -Syu httprobe unfurl openssh waybackurls whatweb smbclient openldap metasploit msf-mpc gnu-netcat\\n\\nRUN pacman --needed --noconfirm --overwrite='*' -Syu  ffuf nuclei corsy smuggler jq subscraper hakrawler brutespray interlace chromium msfdb jdk8-openjdk binwalk smbclient wordlistctl haiti\\n\\n\\n#RUN sed  -i 's/^Server/# Server/' \\\"/etc/pacman.d/blackarch-mirrorlist\\\"\\n\\nRUN cd /home/penelope/non_blackarch_tools && \\\\\\n./install.sh && \\\\\\nrm -rf /home/penelope/non_blackarch_tools\\n\\nENTRYPOINT [\\\"sh\\\",\\\"/entrypoint.sh\\\"]\\nCMD [\\\"zsh\\\", \\\"-ic\\\", \\\"tmux\\\"]\\n\")), mdx(\"p\", null, \"Let's examine it piece by piece...\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"FROM archlinux:latest\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is telling us that we're using archlinux:latest \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"container\"), \" as a base to our image.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"ENV USER_ID 1000\\nENV GROUP_ID 1000\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This sets a variable (we can call it even environment variable) that'll be used when building the image\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"COPY ./pacman.conf /etc/pacman.conf\\nRUN pacman --sync --refresh --sysupgrade --noconfirm core/filesystem core/sudo && \\\\\\nfind / -type f '(' -name '*.pacnew' -or -name '*.pacsave' ')' -delete 2> /dev/null\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is a setup for pacman.conf (this is not that much necesseary)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then it's running pacman to do basic initialization after copying a pacman.conf, but it also installes sudo and filesystem packages from core\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Finally the find command is ran deleting all .pacnew and .pacsave files from the filesystem\", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \".pacnew and .pacsave are files that store .config files of deleted packages\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"COPY ./sudoers /etc/sudoers\\nRUN chmod 440 /etc/sudoers && \\\\\\ngroupadd --gid $GROUP_ID penelope && \\\\\\nuseradd --uid $USER_ID --gid $GROUP_ID --groups wheel --create-home penelope\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Here we copy sudoers file to /etc/sudoers on our future container\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then running chmod to so that nobody will have write access to this file (because we access it with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"visudo\"), \" command)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then we're adding a group called  penelope (Notice that we're using $GROUP_ID variable that we've declared before) and a user that is being assing to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"two\"), \" groupd - wheel and penelope\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"RUN export TERM=xterm && curl --silent --show-error https://blackarch.org/strap.sh | bash\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Finally we're using curl to download script that'll initialize and add blackarch repository to our... well package repositories, initialize keyring etc.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"COPY ./entrypoint.sh\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This file is pretty important,  lets see CONTENTS OF ENTRYPOINT.SH\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"#!/usr/bin/env bash\\n[[ \\\"$USER_ID\\\" == \\\"$(id -u penelope)\\\" && \\\"$GROUP_ID\\\" == \\\"$(id -g penelope)\\\" ]] || usermod --uid \\\"$USER_ID\\\" --gid \\\"$GROUP_ID\\\" penelope\\nexec sudo --user penelope -- \\\"$@\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Okaaay, what is it?! (You might ask ;p). The '[[' characters signalize that this is a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"if statement\"), \" - Yeah I know, if statement without if keyword, but in bash it's somehow possible.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"So this stamenent checks if we've done everything right with creating a user penelope and assigning it to the appropriate groups \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"OR\"), \" if the command  \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"usermod --uid \\\"$USER_ID\\\" --gid \\\"$GROUP_ID\\\" penelope\"), \" was successful, which will in the end do the same result.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After this 'if statement' we're logging as penelope.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BUT! We're only copying this file and we're not executing it, so what's going on here?! We'll see in the future, don't worry :)\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"WORKDIR /home/penelope\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is important step too, because now every action that we're going to perform that results in downloading a file, creating another directory etc. will be in that file\", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This option is not frequently used in my Dockerfile, only  this once, because I often see it more comfortable to just use 'cd <name_of_directory>', but it's probably a bad practice.\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"RUN pacman --needed --noconfirm -Syu curl \\\\\\n        wget \\\\\\n        git \\\\\\n        go \\\\\\n        python \\\\\\n        python-pip \\\\\\n        iputils \\\\\\n        ruby \\\\\\n        zsh \\\\\\n        gcc \\\\\\n        openvpn \\\\\\n        tmux \\\\\\n        man-db \\\\\\n        sudo \\\\\\n        man-pages \\\\\\n        nodejs \\\\\\n        base-devel \\\\\\n        yarn \\\\\\n        vim \\\\\\n        vi \\\\\\n        npm \\\\\\n        postgresql \\\\\\n        ruby-bundler \\\\\\n        zsh-syntax-highlighting\\n        \\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This installed basic utils that should be preinstalled before installing any blackarch tools or git cloning.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"USER penelope\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is super useful, the same goes to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"USER root\"), \", It is an extra easy way of switching between root user and non-root user without having to input any password, perfect!\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Setting up zsh and getting Luke Smith's .zshrc and installing oh-my-zsh\\n\\nRUN sh -c \\\"$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)\\\" && \\\\\\nrm ~/.zshrc && \\\\\\nwget https://raw.githubusercontent.com/Cloufish/voidrice/master/.config/zsh/.zshrc -O ~/.zshrc && \\\\\\necho 'penelope' > chsh -s /usr/bin/zsh\\n\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"From this point there's a lot of my personal customization, it's getting time and many failed attempts in finding a particular solution to a problem, and you'll probably find many obstacles yourself when building a Docker container, remember that \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Stack Overflow is your friend\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"But are those Stack Overflow answers always secure? In this case we're just echo'ing password for the non-root user so it's not something that bad ~ Words said before a disaster! :D\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"RUN pacman --needed --noconfirm --overwrite='*' -Syu tmux gcc git vim wget tzdata curl iputils make nmap whois openvpn go \\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Let's jump into installing tools from blackarch repository database. The switched are:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--needed\"), \" - so that I won't reinstall packages unneceseary (because why should I, If a package is installed? ;P)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--noconfirm\"), \" - Is a way of telling the pacman 'I want this without any prompts!' basically\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--overwrite='*'\"), \" Here is the one of the issues for installing packages with blackarch database. Lot of times there'll be errors that 'A package already exists', but not in a way --needed checks it (I don't understand it perfectly to be honest), but we're using this switch to overwrite every package. Is it then neglecting \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--needed\"), \" switch/flag? Tell me in the comments :p \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Now read again the whole Dockerfile that I've provided to you in the beginning and figure out what you don't understand, then come back here again. It's to remember it more efficient\")), mdx(\"h2\", {\n    \"id\": \"so-how-do-you-create-your-own\"\n  }, \"So how do you create 'Your own'?\"), mdx(\"h3\", {\n    \"id\": \"modifying-from-argument\"\n  }, \"Modifying FROM argument:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can use argument \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"FROM cloufish/blackarch-zsh-minimal:latest\"), \" keywoard if you  like adventures and if you're risky player.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or you can just copy the Dockerfile from \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Cloufish/dockerfiles/blob/master/blackarch-zsh-minimal/Dockerfile\"\n  }, \"blackarch-zsh-minimal\"), \" and then modifying it\")), mdx(\"h3\", {\n    \"id\": \"ive-in-someway-tricked-you-because-the-best-way-of-doing-this-is-through-practice\"\n  }, \"I've in someway tricked you, because the best way of doing this is through practice\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I'm sorry\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u3054\\u3081\\u306A\\u3055\\u3044\\uFF01\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I'm also not an expert, the knowledge that I've gained and this project took me 3 months to make it stable and in some way 'worth it to publish'. And I would never imagine that it would be that cool after first weeks of struggling with user creation \")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"0e0f6638-8839-5b5f-a23f-afa1093925a1","fields":{"slug":"/Old-Posts/2021-02-12-creating-your-own-docker-pentesting-container","title":"Setting up zsh and getting Luke Smith's .zshrc and installing oh-my-zsh"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Preparing your PHYSICAL Android device for Bug-Bounty Part 1\",\n  \"date\": \"2021-03-02 06:46:00 +0100\",\n  \"categories\": [\"Mobile Bug Bounty\", \"Preparing Device\"],\n  \"tags\": [\"mobile bug bounty\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"requirements\"\n  }, \"Requirements:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You have your own PHYSICAL Android Device, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"that you don't use on a daily basis\"), \". It can be an old phone, the only thing that matters is that you don't use it on a daily basis\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Knowing the basic parameters of your device e.g:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Phone model\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CPU Architecture that your device has (ARM/ARM64/x86/x86_64)\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://odinsoft.site/download/\"\n  }, \"Odin Flash Tool\"), \" installed\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Willingness to Google things.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"That's basically it!\")), mdx(\"h2\", {\n    \"id\": \"what-we-will-cover-for-now\"\n  }, \"What we will cover for now:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Installing TWRP\"), \" (Custom Recovery to install essentially zip files, and also custom ROMs on a 'root' level)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Installing custom firmware\"), \" that will be lightweight, but also would allow you to install newer versions of software that you'll be testing\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Installing GApps\"), \", so that you could install software from \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Google Play\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Rooting your device\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"How to make backups\"), \" of Android system so that you can always restore if something would go wrong.\")), mdx(\"h2\", {\n    \"id\": \"installing-twrp\"\n  }, \"Installing TWRP\"), mdx(\"h3\", {\n    \"id\": \"what-is-twrp\"\n  }, \"What is TWRP?\"), mdx(\"p\", null, \"As I stated it is a custom recovery for Android device.\"), mdx(\"h3\", {\n    \"id\": \"why-are-we-installing-it\"\n  }, \"Why are we installing it?\"), mdx(\"p\", null, \"The stock/normal recovery in your Android doesn't allow you to do that many things. Stock recovery is mostly just about... doing factory reset and then recovering from existing recovery-image.\"), mdx(\"p\", null, \"But \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TWRP serves many other features\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Backups of partitions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Restoring these backups\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Custom Firmware Installation! <- Yay!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"File deletion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Terminal access\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theme Support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Possible decryption support\")), mdx(\"h3\", {\n    \"id\": \"where-do-i-get-one\"\n  }, \"Where do I get one?\"), mdx(\"p\", null, \"You need to go to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://twrp.me/Devices/\"\n  }, \"https://twrp.me/Devices/\"), \" and then search for your device model and download the file.\"), mdx(\"h3\", {\n    \"id\": \"installation\"\n  }, \"Installation.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Turn off your phone\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open up Odin3 Flash Tool (Hope you installed it :P)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Boot your phone into \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Download mode\"), \", it's mostly pressing a combination of your phone physical keys, but that all depends on your model, you need to google it :/\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In your Odin:\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.imgur.com/yDK6Qtt.png\",\n    \"alt\": \"Odin\"\n  }), \"\\n(1.) You should click on 'AP' button, then choose your TWRP image.\\n(2.) You should also see that one of these fields signalizes that your device is connected.\\n(3.)  If you've done these two exhausting steps and everything \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"seems\"), \" correct, press Start button and don't disconnect your phone.\"), mdx(\"p\", null, \"You've basically just installed TWRP! Congrats!\"), mdx(\"h2\", {\n    \"id\": \"custom-firmware\"\n  }, \"Custom Firmware\"), mdx(\"h3\", {\n    \"id\": \"why-should-you-install-it\"\n  }, \"Why should you install it?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Custom firmware can provide extra functionalities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Also they're free of bloated stock software that Google, Samsung on any other company inserts into your device. \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Saves a lot of disc space!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It is also better optimized with kernel 'enchantments'\")), mdx(\"p\", null, \"However, if you feel completely comfortable, or you have a relatively new phone that is just... fast! Then you don't necessarily install custom firmware\"), mdx(\"h3\", {\n    \"id\": \"what-custom-firmware-should-i-use\"\n  }, \"What custom firmware should I use?\"), mdx(\"p\", null, \" I personally recommend those from \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SlimROMs\"), \" organization. They support a vast majority of Samsung devices, and are probably the most lightweight out there.\"), mdx(\"p\", null, \"They do not provide download links on their website. So you need to Google the phrase \\\"\", \"[Your PHONE Model]\", \" SlimROMs\\\". You'll probably stumble upon XDA forum. This is one of the most trusted places to download the image.\"), mdx(\"h3\", {\n    \"id\": \"installing-slimroms-or-any-other\"\n  }, \"Installing SlimROMs (Or any other)\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Turn off your phone again, and boot it into \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Mode\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"From your computer upload/push the custom ROM image into your phone's sdcard\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click on the \", \"[Install]\", \" button, choose custom ROM zip file and install it.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You've now installed custom ROM, but that's not enough \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"please don't quit out of your TWRP\"), \" though nothing would happen if you do, you would need to enter there again for the next step!\"), mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"installing-gapps\"\n  }, \"Installing GApps.\"), mdx(\"h3\", {\n    parentName: \"li\",\n    \"id\": \"what-is-it\"\n  }, \"What is it?\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"GApps essentially gives you ability to install Google Apps for your newly installed custom firmware. Yes - these apps are not shipped with custom ROMs because of some licensing issue. The solution that I provide is probably the easiest one to have your Google Apps working! :P\"), mdx(\"h3\", {\n    parentName: \"li\",\n    \"id\": \"installing-it\"\n  }, \"Installing it\"))), mdx(\"p\", null, \"Head to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://opengapps.org/\"\n  }, \"https://opengapps.org/\"), \" and then choose the CPU architecture that your phone uses and also Android version \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"that the custom firmware has\")), mdx(\"p\", null, \"The procedure is the same as with custom ROMs:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You upload the file to sdcard\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Enter TWRP\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install the zip file\")), mdx(\"h2\", {\n    \"id\": \"rooting-your-device\"\n  }, \"Rooting your device\"), mdx(\"h3\", {\n    \"id\": \"miscalculations\"\n  }, \"Miscalculations...\"), mdx(\"p\", null, \"From now there may be difficulties/miscalculations!.\"), mdx(\"p\", null, \"If you have Samsung phone, then you have easy one, because there's CF-Auto-Root which enables SuperSU (SuperUser).\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.xda-developers.com/root/\"\n  }, \"XDA Forum Post\"), \" contains a great list of devices that can be rooted (Though Samsung is still the easiest don't lose hope!) ->.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I'll be sticking with CF-Auto-Root.\"), \" I do not have the required knowledge for now to know every method, but you can read about it! Likewise, I'll read it myself later too and probably update this section or creating a new post for the purpose of explaining.\"), mdx(\"h3\", {\n    \"id\": \"installing-it-1\"\n  }, \"'Installing it'\"), mdx(\"p\", null, \"In the case of CF-Auto-Root, you need to...\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Download the .tar.md5 from this site -> \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://autoroot.chainfire.eu/\"\n  }, \"https://autoroot.chainfire.eu/\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If it's zipped, unzip it!\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Then boot up into \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Download Mode\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"And with Odin, the same as in the case of TWRP, select the file and click START\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Don't turn off your device.\")), mdx(\"p\", null, \"If you're able to use CF-Auto-Root then congrats, and if your phone boots and executes exploit, then you have rooted Android phone!\"), mdx(\"h2\", {\n    \"id\": \"things-to-do-after-doing-all-these-steps\"\n  }, \"Things to do after doing all these steps\"), mdx(\"p\", null, \" You should do basic configuration of the device after it boots up for the first time.\"), mdx(\"h3\", {\n    \"id\": \"install-twrp-again\"\n  }, \"Install TWRP (AGAIN)\"), mdx(\"p\", null, \"After rooting your device you might stumble into issue that you don't have TWRP installed now. If so, then you should install it again with the same steps as we had before!\"), mdx(\"h3\", {\n    \"id\": \"doing-backups\"\n  }, \"Doing Backups\"), mdx(\"p\", null, \"If you have done all these steps, you might see that they're relatively easy (Don't worry if you don't understand it now), but also time-consuming.\"), mdx(\"p\", null, \"I recommend you doing backups very often. I don't think you would need that much sdcard space free, so you can use this space to store your backup images.\"), mdx(\"p\", null, \"You can also store these backup images on your computer, Google Drive or anywhere else.\"), mdx(\"p\", null, \"To do simple backups you'll need:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"TWRP Custom Recovery (that you probably have)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In TWRP there'll be an option to do a backup - that easy!\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If you needed to restore the image just use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"restore\"), \" option in TWRP\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"6a1e69c5-72c9-53a0-a7e8-9d3cdda47332","fields":{"slug":"/Old-Posts/2021-03-02-Preparing-your-PHYSICAL-android-device-for-bug-bounty-part-1","title":"2021-03-02-Preparing-your-PHYSICAL-android-device-for-bug-bounty-part-1"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Why should you root your own android device?\",\n  \"date\": \"2021-03-13 06:46:00 +0100\",\n  \"categories\": [\"Mobile Bug Bounty\", \"Preparing Device\"],\n  \"tags\": [\"mobile bug bounty\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"what-is-rooting\"\n  }, \"What is rooting?\"), mdx(\"p\", null, \"It is essentially changing permissions that the app has when it comes to accessing other applications' data and also yours. I'll explain it further :)\"), mdx(\"h2\", {\n    \"id\": \"the-state-of-your-device-before-rooting\"\n  }, \"The state of your device before rooting\"), mdx(\"h3\", {\n    \"id\": \"dalvik-vms\"\n  }, \"Dalvik VMs\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/coQAIcq.jpg\",\n    \"alt\": \"dalvik\"\n  })), mdx(\"p\", null, \"As you can see, every app has It's own 'Virtual Machine' (sandbox) which limits the Apps access to the filesystem.\\nApp1 is only able to access the data from directory \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/data/../<application_name>\")), mdx(\"p\", null, \"With rooted device however, the permissions are not enforced. Meaning that apps could gain access to other apps' data.\"), mdx(\"p\", null, \"Also, you can clearly see that system process also has its own VM, and so to access these system files we need to root our device.\"), mdx(\"h2\", {\n    \"id\": \"why-do-we-need-to-remove-these-permissions\"\n  }, \"Why do we need to remove these permissions?\"), mdx(\"p\", null, \"Basically to gain bigger control over the device.\"), mdx(\"p\", null, \"One might say that it's stupid to remove permissions, because after all we examine the impact of a vulnerability based on the default state, right? And it's true, in the end we'll be estimating impact based on the default setup, but \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"to examine the application's behavior more deeply, wee need full access.\"), \"\\nMany pentesting-tools also require root access, because how would they access other app's data? How would they analyze It's actions dynamically?\"), mdx(\"h2\", {\n    \"id\": \"alternatives-to-rooting-your-device\"\n  }, \"Alternatives to rooting your device\"), mdx(\"p\", null, \"With android debug bridge (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"adb\"), \") debugger you could gain root access to the applications data without the need of rooting your device. However, you wouldn't have access to every system file\"), mdx(\"p\", null, \"All you have to do is enabling adb debugging in Developer Options in your Android settings and that's it.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"But what about other tools\"), \" that only work with root access? Examples of such might be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"frida\"), \", or any other software that let's us hook to a running application.\"), mdx(\"h2\", {\n    \"id\": \"dangers-of-rooting\"\n  }, \"Dangers of rooting\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Giving the app's ability to gain root access may be destructive, if you use this device for a daily tasks, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"you shouldn't use it that way\"))), mdx(\"h2\", {\n    \"id\": \"should-you-root-your-device\"\n  }, \"Should you root your device?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I don't want to give statement that rooting is a necessary thing to do. It's gives the comfort and removes headache of working in a limited environment. \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"It's makes things less problematic\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I recommend you rooting it, but \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"only if won't use it on a daily tasks.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"00bdca5b-36fd-5d8d-aea2-977a249f4636","fields":{"slug":"/Old-Posts/2021-03-02-Why-should-you-root-your-own-android-device","title":"What is rooting?"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"OWASP-ZAP-Fuzzer is it a great alternative for Burp-Suite Intruder?\",\n  \"date\": \"2021-03-21 06:46:00 +0100\",\n  \"categories\": [\"Web Bug Bounty\", \"Tools\"],\n  \"tags\": [\"fuzzing\", \"owasp\", \"zaproxy\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"the-tools-used-for-fuzzing-web-forms--inputs\"\n  }, \"The tools used for fuzzing web-forms / inputs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ffuf\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wfuzz\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"hydra\")), mdx(\"h2\", {\n    \"id\": \"one-of-the-biggest-problems-with-fuzzing\"\n  }, \"One of the biggest problems with fuzzing...\"), mdx(\"p\", null, \"Is that for a beginner - it's not that easy to predefine input fields to fuzz. This often results in constructing a massive command like this:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.43 http-post-form \\\"/department/login.php:username=admin&password=^PASS^:Invalid Password!\\\"\")), mdx(\"p\", null, \"This kind of fuzzing is not intuitive \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"for a beginner\"), \" (though great for automation)\"), mdx(\"h2\", {\n    \"id\": \"two-alternatives-come-into-play\"\n  }, \"Two alternatives come into play:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Burp Suite Intruder\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"OWASP ZAProxy\")), mdx(\"p\", null, \"You're probably familiar with the first one - Burp Suite Intruder. It provides an easy way of selecting inputs to fuzz just like in this picture:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.imgur.com/ZVCMrjA.png\",\n    \"alt\": \"image\"\n  })), mdx(\"p\", null, \"The biggest con of this is that it rate-limits all the fuzzing to the slowest way possible - \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"if you're not using Professional Edition\")), mdx(\"h2\", {\n    \"id\": \"a-great-alternative\"\n  }, \"A great alternative\"), mdx(\"p\", null, \"Hold your seats though, because there's a great alternative for Burp Suite Intruder - OWASP ZAProxy Fuzzer.\\nWhich essentially has the same features as the Burp Suite Intruder. But because It's \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"open-source\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"it is also free\")), mdx(\"h2\", {\n    \"id\": \"lets-see-it-in-actions\"\n  }, \"Let's see it in actions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We'll be testing it on PortSwigger Authentication Academy (Yes, I know...)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Do it with me, please :)\"))), mdx(\"h3\", {\n    \"id\": \"lab-username-enumeration-via-different-responses\"\n  }, \"Lab: Username enumeration via different responses\"), mdx(\"p\", null, \"You can find this lab \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://portswigger.net/web-security/authentication/password-based/lab-username-enumeration-via-different-responses\"\n  }, \"HERE\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/68MSbfB.jpg\",\n    \"alt\": \"test\"\n  })), mdx(\"p\", null, \"We also get the lists that we can use to brute-force these forms:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/vFcOttN.jpg\",\n    \"alt\": \"lists\"\n  })), mdx(\"p\", null, \"Let's access the lab, this won't be a walkthrough-focused blog post, it'll be mostly about using zaproxy fuzzer.\"), mdx(\"p\", null, \"Let's open ZAProxy, then insert lab's URL into the URL to explore the field, and let's start exploring the app on the browser!\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/DIdjAAH.jpg\",\n    \"alt\": \"zaproxy-ui\"\n  })), mdx(\"p\", null, \"And go to the login page, set a breakpoint just like in 1st step, and do other steps also ;p.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/JBhp9uI.jpg\",\n    \"alt\": \"login\"\n  })), mdx(\"p\", null, \"Then you can see that in the zaproxy ui you have a request exactly on the POST form request\"), mdx(\"p\", null, \"Right-click on the request, and select the option \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Fuzz\"), \", then this window will appear\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/Y2rs8Uz.jpg\",\n    \"alt\": \"request\"\n  })), mdx(\"p\", null, \"If you're familiar with Burp Suite Intruder then you'll probably get comfortable with this interface.\"), mdx(\"p\", null, \"You're able to add fuzzing placeholders just like in Burp, and add payloads, which soon you'll see are configured exactly as in Burp.\"), mdx(\"p\", null, \"Highlight the username \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"value\"), \" text (test). When you click 'Add' the new Window to configure Payload/Wordlist will appear. You can tweak with that on your own, there're many interesting options!\"), mdx(\"p\", null, \"For now, though I'll just add a wordlist that is given to us by Portswigger Academy.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/yz3wSFS.jpg\",\n    \"alt\": \"payloads\"\n  })), mdx(\"p\", null, \"Look like we're done - that's it :) Let's Start the Fuzzer!\"), mdx(\"p\", null, \"After the fuzzing completes, we can analyze the results.\\nAs you can see, most of the invalid ones share the same HTTP Code, Size of the Response Body, and Size of the Response Header.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/BvsjIWv.jpg\",\n    \"alt\": \"results\"\n  })), mdx(\"p\", null, \"However, we see one has code 302 Found. These appear to be the correct login credentials. I can guarantee, that this process in the free version of Burp would take up to 1.5h or even more when Burp has done that in less than 15 minutes\"), mdx(\"h3\", {\n    \"id\": \"lab-username-enumeration-via-subtly-different-responses\"\n  }, \"Lab: Username enumeration via subtly different responses\"), mdx(\"p\", null, \"You can find this lab \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://portswigger.net/web-security/authentication/password-based/lab-username-enumeration-via-subtly-different-responses\"\n  }, \"HERE\")), mdx(\"p\", null, \"Let's repeat the same process again\"), mdx(\"p\", null, \"Fortunately for us, the same process applies and works in zaproxy:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/qmMrOFW.jpg\",\n    \"alt\": \"results2\"\n  })), mdx(\"p\", null, \"But it seems like this challenge was not designed in this way. The way it is intended is to grep for a message \\\"Invalid password\\\" and then filter fuzzer's output. But... the problem is that OWASP ZAP doesn't provide this feature in it's GUI version.\"), mdx(\"p\", null, \"Instead, it support in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/zaproxy/community-scripts/tree/master/httpfuzzerprocessor\"\n  }, \"scripting engine\")), mdx(\"h3\", {\n    \"id\": \"lab-username-enumeration-via-response-timing-not-working-one-\"\n  }, \"Lab: Username enumeration via response timing NOT WORKING ONE :/\"), mdx(\"p\", null, \"You can find this lab \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://portswigger.net/web-security/authentication/password-based/lab-username-enumeration-via-response-timing\"\n  }, \"HERE\")), mdx(\"p\", null, \"Let's repeat the process again.\"), mdx(\"p\", null, \"We know (From the hint) that this lab introduces protection against brute-forcing with blocking IP-Addresses, but that it is easy to bypass\"), mdx(\"p\", null, \"This can be bypassed by adding the header\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X-Forwarded-For: 192.168.1.0\")), mdx(\"p\", null, \"and fuzzing this IP address, making it impossible for the server (in this scenario) to detect If we're in the same location.\"), mdx(\"p\", null, \"To do this we need to right-click on the request -> Open/Resend with Request Editor -> And then add the header\"), mdx(\"p\", null, \"Then from the Open/Resend Window, we right-click and then choose the Fuzz option again.\"), mdx(\"p\", null, \"Now We need to fuzz the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X-Forwarded-For\"), \" header. Do the same thing as with normal input values - select the last \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"octet\"), \" -> click Add and edit the fields accordingly:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/o5Nfk4p.jpg\",\n    \"alt\": \"numberzz\"\n  })), mdx(\"p\", null, \"Then, add only one fuzzing parameter (highlight only one value), and add the payload for username\"), mdx(\"p\", null, \"The final Fuzzer window should look like this:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/TvfeSes.jpg\",\n    \"alt\": \"window\"\n  })), mdx(\"p\", null, \"Let's start the fuzzer!\"), mdx(\"p\", null, \"It seems though that the fuzzer is not working as We expected, because It iterates the ip-address only after all possible usernames were fuzzed already - which results in blocking our IP before even 5 attempts were made.\"), mdx(\"h2\", {\n    \"id\": \"cons-of-zaproxy-fuzzer\"\n  }, \"Cons of ZAProxy Fuzzer\"), mdx(\"p\", null, \"So we can see many cons with, some of them are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of Payload options\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Many features are only accessible through the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zaproxy/community-scripts\"\n  }, \"community scripts\"), \" of ZAProxy, and creating your own \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zaproxy/community-scripts/tree/main/httpfuzzerprocessor\"\n  }, \"HTTP Fuzzer Processor\"))), mdx(\"p\", null, \"However if someone would dwell deep into ZAP scripting, then it could become a great alternative, that would replace Burp Suite Community Edition.\"), mdx(\"h2\", {\n    \"id\": \"update---a-great-extension-to-burp-suite-community-free---turbo-intruder\"\n  }, \"UPDATE - A Great Extension to Burp Suite Community (Free) - Turbo Intruder\"), mdx(\"p\", null, \"You can also check out the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://portswigger.net/research/turbo-intruder-embracing-the-billion-request-attack\"\n  }, \"Turbo Intruder Extension\"), \".\\nWith it though, you also need to dwell deep into scripting - but these concepts are not that complicated, seriously!\"), mdx(\"p\", null, \"This extension omits the time limit of fuzzing to a normal, even 20 requests sent per second. I really recommend that also!\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"b5e83c4c-b721-5949-80e7-653383594062","fields":{"slug":"/Old-Posts/2021-03-21-OWASP-ZAP-as-a-great-fuzzing-tool","title":"2021-03-21-OWASP-ZAP-as-a-great-fuzzing-tool"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Can OWASP ZAP replace Burp Suite Professional?\",\n  \"date\": \"2021-03-28 06:46:00 +0100\",\n  \"categories\": [\"Web Bug Bounty\", \"Tools\"],\n  \"tags\": [\"owasp\", \"zaproxy\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"the-short-answer---no-\"\n  }, \"The short answer - NO :)\"), mdx(\"p\", null, \"Burp Suite offers a tremendous scope of functionalities in one of his app implementation, it has also funds from the paid version to develop this tool more and more, so I don't think It'll ever be replaced with OWASP ZAP.\"), mdx(\"h2\", {\n    \"id\": \"the-question-should-be---what-functionalities-of-burp-suite-professional-can-i-have-for-free\"\n  }, \"The question should be - What functionalities of Burp Suite Professional can I have for free?\"), mdx(\"p\", null, \"I got this idea for a new Hacksplained's video called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/watch?v=FMGa6xBzNck\"\n  }, \"Burp Suite Professional Features For Free (Pimp your Community Edition)\")), mdx(\"p\", null, \"It is really awesome, I really recommend you checking it out!\"), mdx(\"p\", null, \"But I realized something... that he didn't limit himself only to using Burp Extensions, but he used functionalities outside the Burp Suite program - that might be obvious to some of you, did you really think that there's a free version/alternative of Burp Collaborator other than hosting your own OOB(Out of Band) server? I did not!\"), mdx(\"p\", null, \"These all external functionalities that he has shown could also be used to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PIMP THE OWASP ZAP TO WORK AS BURP SUITE PRO\")), mdx(\"p\", null, \"It is to be honest the same scenario. Because OWASP ZAP offers a free Web-Vulnerabilities-Scanner that in Burp Suite cannot get acquired for free but is also extremely handy!\"), mdx(\"h2\", {\n    \"id\": \"so-lets-analyze-this-video-bit-by-bit-but-in-owasp-zaps-case\"\n  }, \"So let's analyze this video bit by bit, but in OWASP ZAP's case\"), mdx(\"h3\", {\n    \"id\": \"burp-search-in-owasp-zap\"\n  }, \"Burp Search in OWASP ZAP\"), mdx(\"p\", null, \"That is fairly simple, in OWASP there's a Search Tab:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/BDM2ySH.png\",\n    \"alt\": \"Search-Tab\"\n  })), mdx(\"h3\", {\n    \"id\": \"burp-suite-csrf-poc\"\n  }, \"Burp Suite CSRF PoC\"), mdx(\"p\", null, \"You just use external site/script \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/merttasci/csrf-poc-generator\"\n  }, \"csrf-poc-generator\")), mdx(\"p\", null, \"Just as it was mentioned in Hacksplained's video\"), mdx(\"h3\", {\n    \"id\": \"burp-collaborator-for-zap\"\n  }, \"Burp Collaborator for ZAP\"), mdx(\"p\", null, \"Again, just as was mentioned in the video, we can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://requestbin.net/\"\n  }, \"RequestBin\")), mdx(\"h3\", {\n    \"id\": \"burp-intruder-for-zap\"\n  }, \"Burp Intruder for ZAP\"), mdx(\"p\", null, \"I've covered the topic of Fuzzing in OWASP ZAP \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://cloufish.github.io/blog/posts/OWASP-ZAP-as-a-great-fuzzing-tool/\"\n  }, \"On My Other Blogpost\"), \".\"), mdx(\"p\", null, \"The final conclusion that I pointed there is that we need to use ZAP's fuzzing \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/zaproxy/community-scripts/tree/master/httpfuzzerprocessor\"\n  }, \"scripts\"), \", so it's the same case as in Turbo Intruder.\"), mdx(\"p\", null, \"So this section is I think a win for Burp Suite Pro because nonetheless, you would have to learn Python/JS scripting to use it for free.\"), mdx(\"h3\", {\n    \"id\": \"burp-suite-scanner-for-zap\"\n  }, \"Burp Suite Scanner for ZAP\"), mdx(\"p\", null, \"The active scanning capabilities that are in ZAProxy are awesome! I don't want to make statements that these are better than in Burp Suite because I did not use the Scanner of Burp to make a non-biased comparison, but many aspects that make Burp Scanner great are also in ZAProxy!\"), mdx(\"p\", null, \"With many built-in scanning rules, you'll probably stumble upon many vulnerabilities that you didn't know they've existed!\"), mdx(\"p\", null, \"ZAP scanner provides a good insight into how requests are constructed, what headers are missing and potentially make the app vulnerable, how the CORS is configured, Information Disclosures.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/cb3UeXU.png\",\n    \"alt\": \"Scanner\"\n  })), mdx(\"h2\", {\n    \"id\": \"summary\"\n  }, \"Summary\"), mdx(\"p\", null, \"There are many functionalities that OWASP ZAP provides, e.g. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/watch?v=7WL-emt5PDc\"\n  }, \"HUD\"), \" (That's extremely awesome function!) and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/watch?v=kD540gUWJ3I\"\n  }, \"Report Generator\"), \" which (I think) are not in Burp Suite\"), mdx(\"p\", null, \"But there are probably other functions of Burp Suite that are not included in ZAProxy! And that's fine!\"), mdx(\"p\", null, \"I prefer though to use OWASP ZAP and to complement the lacking functionalities of it with the things mentioned in Hacksplained's video!\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"e33e11cc-8609-5f39-8cc3-f36cc8fa2bc7","fields":{"slug":"/Old-Posts/2021-03-28-Can-OWASP-ZAP-replace-Burp-Suite-Professional?","title":"2021-03-28-Can-OWASP-ZAP-replace-Burp-Suite-Professional?"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Learning on how to build a modern WebApp - MEAN STACK\",\n  \"date\": \"2021-04-05 06:46:00 +0100\",\n  \"categories\": [\"DevSecOps\", \"Programming Projects\"],\n  \"tags\": [\"mean\", \"stack\", \"angularjs\", \"nodejs\", \"express\", \"mongodb\", \"programming\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I've recently decided that it is a great idea to learn the 'basics' (from my perspective) of modern WebApp development. This post won't be some kind of guide - just my thoughts :)\"), mdx(\"h2\", {\n    \"id\": \"why-learning-webapp-programming\"\n  }, \"Why learning WebApp Programming?\"), mdx(\"h3\", {\n    \"id\": \"from-a-pentesters-perspective\"\n  }, \"from a Pentester's perspective\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It helps you better understand the WebApp, and thus you'll have more chance of catching some mistakes, bad practices (maybe)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In my opinion, it's way better to learn the relationships between Client and the Server Side (Even that there exists concept like that), and building security knowledge upon that, than to after months of confusion finally realize it, just with ctfs, bugbounty (This statement may be abstract for some people, though for a beginner it takes some time to acquire this knowledge only with ctfs, reading Security stuff)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It gives you basically a free, your own lab where you can test basic OWASP 10 Vulnerabilities. You can also see by that if these frameworks are secure by default or not\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Learning JavaScript in my opinion can only be accomplished by doing WebApp projects. If you know them, then vulnerabilities that require code review/analysis (DOM Vulnerabilities for example) are open!\")), mdx(\"h3\", {\n    \"id\": \"from-a-devsecops-perspective\"\n  }, \"From a DevSecOps Perspective\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Understanding on how to code gives you some insight on Developer's work. That there are many things to miss for him\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you gain this knowledge, you'll probably gain better ability of communicating with Developer Teams. After all AppSec culture is well-established through Security Team and Developers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Also you'll probably better evaluate on how to implement Security practices into developer's workflow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If You'd want to implement security by default (through creating wrappers around \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"potentially\"), \" unsafe libraries), you'll have to learn programming anyway. Understanding most popular web stacks and the one that your developers use is the first step to take!\")), mdx(\"h2\", {\n    \"id\": \"what-course-did-i-choose\"\n  }, \"What course did I choose?\"), mdx(\"p\", null, \"Basically that one -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/watch?v=1tRLveSyNz8&pbjreload=101\"\n  }, \"MEAN CRASH COURSE\")), mdx(\"p\", null, \"There're tremendous amounts of great courses like these. There's no need in spending money on courses and Bootcamp (if you don't want to be programmer)\"), mdx(\"p\", null, \"This course was about building a WebApp on the MEAN Stack\"), mdx(\"h2\", {\n    \"id\": \"what-is-stack---what-does-it-even-mean-you-mean-stackoverflow-right\"\n  }, \"What is Stack - what does it even mean? You mean StackOverflow, right?\"), mdx(\"p\", null, \"Noo... The terminology 'Stack' signalizes on what technologies the WebApp is built.\"), mdx(\"p\", null, \"For Example - the one that I made from the course is based on the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MEAN\"), \" Stack. Which stands for\\n(MongoDB, Express, AngularJS, NodeJS)\"), mdx(\"p\", null, \"These technologies together create an excellent ecosystem for building a modern web-app\"), mdx(\"h2\", {\n    \"id\": \"my-webapp-developing-background\"\n  }, \"My WebApp Developing Background:\"), mdx(\"p\", null, \"Basically none. In high school I was creating a lot of projects with PHP code that would add a new row/data into MySQL database, also some JavaScript to change the color of the buttons, CSS and HTML.\"), mdx(\"h2\", {\n    \"id\": \"my-impressionobstacles\"\n  }, \"My impression/obstacles\"), mdx(\"p\", null, \"It's so amazing to see how modern frameworks work. In this video many of stuff that was written was in typescript instead of JavaScript.\\nAdding new elements to the Posts object is so abstract to me! Also, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@Output()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@Input()\"), \" function.\\ncalls seem peculiar!.\"), mdx(\"h2\", {\n    \"id\": \"other-thoughts\"\n  }, \"Other thoughts\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This course though is a bit outdated, it has almost 3 years and much stuff has changed. For example now you have to specify a deeper path to import a new module, not just doing some sort of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"import * from\"), \" as many do (which is a bad practice!) in Python\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Even though I didn't understand everything, I've accepted this and nonetheless I concentrated on understanding the most of it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To my disappointment It only touched briefly the idea of NodeJS, Express and MongoDB and explained only the concepts.\")), mdx(\"p\", null, \"That's basically it from me today :) I'll probably be doing more of such courses, but next time the newer one, and also more complete (I've already found about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://youtu.be/ktjafK4SgWM\"\n  }, \"MEARN Stack\"), \" which I think will be way better!)\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"bd1887a7-5e2d-5226-9a8e-0448bf48e2f6","fields":{"slug":"/Old-Posts/2021-04-05-Learning-on-how-to-build-a-modern-webapp","title":"2021-04-05-Learning-on-how-to-build-a-modern-webapp"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Setting up ZAP Scan in CI/CD pipeline\",\n  \"date\": \"2021-04-12 06:46:00 +0100\",\n  \"categories\": [\"DevSecOps\", \"CI/CD\"],\n  \"tags\": [\"owasp\", \"zaproxy\", \"ci\", \"devsecops\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"what-is-cicd-pipeline\"\n  }, \"What is CI/CD pipeline?\"), mdx(\"p\", null, \"To put it simply, it is a pathway to deployment, in a fast way in respect with Agile manifesto.\\nEvery pull request on GitHub should be checked in order to check if it's working accordingly and prepare it for production area.\"), mdx(\"p\", null, \"There are various CI/CD segments like managing deployment architecture, doing Jest tests, but to us - security people We should focus on:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Application automation security testing - \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"This one we'll cover today\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automating Vulnerability Management\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Eliminating easy to check vulnerabilities in code, also in pull requests. It could be functions such as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eval()\"), \", or more complex stuff like lack of JWT token validation and also enforcing the use of secure functions by default.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Monitoring and collecting data - Without this data, automation is way harder\")), mdx(\"h2\", {\n    \"id\": \"integrating-zap-action-into-ci-pipeline\"\n  }, \"Integrating ZAP Action into CI pipeline:\"), mdx(\"p\", null, \"This will provide a straightforward step-by-step tutorial, also explaining every bit of code, feel free to comment if there are any other things you don't understand!\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"IMPORTANT\"), \" - Although It won't cover every basic on Github Actions, to get familiar with the basics I recommend this \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://lab.github.com/githubtraining/github-actions:-continuous-integration\"\n  }, \"GitHub's interactive lab\"))), mdx(\"h3\", {\n    \"id\": \"1-finding-vulnerable-app-on-which-we-could-build-the-zap-tests\"\n  }, \"#1 Finding Vulnerable App on which we could build the ZAP tests!\"), mdx(\"p\", null, \"In the -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/devsecops/awesome-devsecops#training\"\n  }, \"Awesome DevSecOps\"), \" repository We can find a pretty good list of Vulnerable Test Targets.\\nI'll be choosing \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/OWASP/NodeGoat\"\n  }, \"NodeGoat\"), \". Let's \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fork\"), \" it!\"), mdx(\"p\", null, \"After We've forked it, we \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"need\"), \" to enable Issues for this forked repo. This is as simple as checking the option in the Settings tab:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/Zk58nHJ.png\",\n    \"alt\": \"issues\"\n  })), mdx(\"p\", null, \"This is necessary because ZAP output will be shown as a newly created issue. Without these options checked the ZAP just won't finish its work.\"), mdx(\"h3\", {\n    \"id\": \"2-creating-workflowyml-file\"\n  }, \"#2 Creating workflow.yml file\"), mdx(\"p\", null, \"The name 'workflow.yml' is given here as an example, it can be named whatever you want. However, it needs to be in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".github/workflows\"), \" directory\"), mdx(\"h3\", {\n    \"id\": \"3-building-the-application-in-a-local-environment\"\n  }, \"#3 Building the Application in a local environment\"), mdx(\"p\", null, \"Because ZAP tests run on a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"live\"), \" target, we need to first run the app in the local GitHub environment. This can be done using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--detached\"), \" flag, and of course for that we need Dockerfile.\"), mdx(\"p\", null, \"Fortunately for us - this repo also gives us a Dockerfile and docker-compose.yml file in the projects directory.\"), mdx(\"p\", null, \"Let's edit the workflow file to contain following lines:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"\\nname: Security Checks\\non: [push]\\n\\njobs:\\n  test:\\n    name: OWASP ZAP SCANS\\n    runs-on: ubuntu-latest\\n\\n    steps:\\n       - uses: actions/checkout@v2\\n         with:\\n          ref: master\\n       - name: Building Docker Node-Goat Image\\n         run: docker-compose build\\n       - name: Launching the app\\n         run: docker-compose up --detach\\n\")), mdx(\"p\", null, \"This would launch the app.\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"- uses: actions/checkout@v2\"), \" line gives us the access to the source code, it's like locally running git clone (though it's probably more complicated than that).\"), mdx(\"h3\", {\n    \"id\": \"3-integrating-zap-tests\"\n  }, \"#3 Integrating ZAP tests\"), mdx(\"p\", null, \"We'll do that by adding the next action.\"), mdx(\"p\", null, \"When editing the workflow file you may have noticed that you have a 'Marketplace' on the right side. We'll use it now and search for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"'ZAP'\"), \", we'll get 2 results that:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"OWASP ZAP Full Scan\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"OWASP ZAP Baseline Scan.\")), mdx(\"p\", null, \"The first one is more time-consuming scan, however it covers much bigger scope, and it's an active scan. I think that It should be run only 1 times in week or even less.\"), mdx(\"p\", null, \"OWASP ZAP Baseline Scan however is ideal for CI/CD pipeline. It's fast and won't interfere that much in developers branch merging. It'll check passively for things like CSP Policies, Headers which are not set, Cookie problems.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/PD31qio.png\",\n    \"alt\": \"ZAP\"\n  })), mdx(\"p\", null, \"We need to copy this snippet into our workflow file.\"), mdx(\"p\", null, \"Then, you'll probably need to fix the indentation - The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".yaml\"), \" format is very strict on these, and also GitHub has some other conventions.\"), mdx(\"p\", null, \"Defining the values of these parameters are pretty straightforward - you just have to write it after the colon sign\"), mdx(\"p\", null, \"I think that every parameter is easy to understand. The one that might cause a problem is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token: \"), \".\\nYou just need to provide it a value of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"${{ secrets.GITHUB_TOKEN }}\"), \", so it'll be something like this -> \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token: ${{ secrets.GITHUB_TOKEN }}\"), \"\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"target: \"), \" should be pointing to a localhost:4000 - The port set in the Dockerfile.\"), mdx(\"p\", null, \"The workflow file that I've come around was:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"\\nname: Security Checks\\non: [push]\\n\\njobs:\\n  test:\\n    name: OWASP ZAP SCANS\\n    runs-on: ubuntu-latest\\n\\n    steps:\\n       - uses: actions/checkout@v2\\n         with:\\n          ref: master\\n       - name: Building Docker Node-Goat Image\\n         run: docker-compose build\\n       - name: Launching the app\\n         run: docker-compose up --detach\\n\\n       - name: OWASP ZAP\\n         uses: zaproxy/action-baseline@v0.4.0\\n         with:\\n           # Target URL\\n           target: \\\"http://localhost:4000\\\"\\n           fail_action: false\\n           token: ${{ secrets.GITHUB_TOKEN }}\\n           issue_title: Security Tests\\n\\n\")), mdx(\"p\", null, \"And that's basically it. The new issue will be created:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/rBENnhL.png\",\n    \"alt\": \"issues2\"\n  })), mdx(\"p\", null, \"However, there are caveats:\"), mdx(\"h2\", {\n    \"id\": \"caveats\"\n  }, \"Caveats\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The ZAP scan \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"will not replace\"), \" the human eye. You \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"should\"), \" examine every one of these issues, and If It relates to your application! There's no reason to point out the nonexistence of a Header mitigating Clickjacking, if there are no forms to submit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This also will mostly remove only the long-hanging fruits. You should still hire a Pentester, create Bug Bounty Program to search for more severe (once you eliminate these long-hanging ones)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The use of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rules_file_name:\"), \" is highly advisable to remove those fail-positives I was writing about in the previous points.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"5d26e9b7-945b-5970-8e4e-ecc6776fbcdc","fields":{"slug":"/Old-Posts/2021-04-12-Setting-up-zap-scan-in-cicd-pipeline","title":"2021-04-12-Setting-up-zap-scan-in-cicd-pipeline"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Setting up Hashicorp Vault to manage our Github Token\",\n  \"date\": \"2021-04-19 06:46:00 +0100\",\n  \"categories\": [\"DevSecOps\", \"Vault\"],\n  \"tags\": [\"vault\", \"authentication\", \"key management\", \"api\", \"devsecops\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"UPDATE: This blog post is about managing secrets to authenticate to GitHub via HTTPS connection. But you can also authenticate via SSH connection and generate your own private key as described \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/questions/6565357/git-push-requires-username-and-password\"\n  }, \"here\"), \". This solution may be more comfortable, because you're not even prompted for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"any\"), \" credentials.\")), mdx(\"h2\", {\n    \"id\": \"intro\"\n  }, \"Intro\"), mdx(\"p\", null, \"If you're working with GitHub/git you may have noticed that you got an e-mail which informs you about a *\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Deprecation of Username:Password authentication via git in favor of authentication of Username:Token by the end of \"), \"12th August*\"), mdx(\"p\", null, \"And you've probably got the links below to generate new API Github Token as well as why they want you to do that:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/\"\n  }, \"https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\"\n  }, \"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\")))), mdx(\"p\", null, \"It's a trivial thing to do, so I'll skip the process of generating the Token.\"), mdx(\"p\", null, \"Some of you might be thinking on how to exactly store this Token securely?\"), mdx(\"h2\", {\n    \"id\": \"how-tokenssecrets-should-be-kept-secret\"\n  }, \"How tokens/secrets should be kept \", mdx(\"strong\", {\n    parentName: \"h2\"\n  }, \"secret\"), \":\"), mdx(\"h3\", {\n    \"id\": \"level-0---hardcoded\"\n  }, \"Level 0 - Hardcoded:\"), mdx(\"p\", null, \"Definitely they shouldn't be hard-coded into our scripts, application code - This shouldn't even take place.\"), mdx(\"h3\", {\n    \"id\": \"level-1-putted-in-config-file\"\n  }, \"Level 1 Putted in config file:\"), mdx(\"p\", null, \"Putting them into a config file - like when assigning them into an Environment Variable e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GITHUB_TOKEN=gkw4k4uk5jkwrkf3k0j60fk23gksmbs\"), \"is also a bad idea, because a bad actor might still read these token when accessed to our machine, or even worse - we could accidentally push this config file into a public repository, because we didn't include this file into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".gitignore\"), \".\"), mdx(\"h3\", {\n    \"id\": \"level-2---encrypted-keys-in-config-filecode\"\n  }, \"Level 2 - Encrypted keys in config file/code:\"), mdx(\"p\", null, \"If we need to push these keys into our repository, then they should definitely be encrypted\"), mdx(\"p\", null, \"We can encrypt these keys with OpenSSL\"), mdx(\"p\", null, \"But the process of decrypting these keys might be troublesome and tiring to an ordinary developer.\"), mdx(\"p\", null, \"And also it puts the question - \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Where to store the encryption key?\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"If you wanted simplicity\"), \", then you probably put these \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"encryption keys into a one file\"), \". This though poses a risk of over-privileged access, because a person that wants to access only one key now has the access to all of them\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you put these keys into different files, now you'd have bigger complexity and many of people would get frustrated of doing such a 'simple security thing'.\")), mdx(\"h3\", {\n    \"id\": \"level-3---moving-the-secrets-to-dedicated-server-secret-manager\"\n  }, \"Level 3 - Moving the secrets to dedicated server secret manager\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"But creating your own crypto system has a lot of risks of not implementing it correctly. Just like the saying goes \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"You shouldn't write your own crypto\"), \" it can also apply to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"You shouldn't write your own crypto-server\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You would probably use Cloud Service providers to manage your keys such as \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Azure Key Vault\"), \" \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"AWS KMS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This will provide a high liability on who accessed these secrets and functionality\")), mdx(\"h3\", {\n    \"id\": \"level-4---hashicorp-vault-temporary-credentials\"\n  }, \"Level 4 - Hashicorp Vault (Temporary Credentials)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If the secret is stolen/disclosed/leaked then after a while It won't be valid\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It grants you a credentials/secrets and then after a while it revokes these credentials\")), mdx(\"h2\", {\n    \"id\": \"development-vs-production-environment\"\n  }, \"Development vs Production environment:\"), mdx(\"p\", null, \"When thinking about managing key/tokens/secrets we should take into consideration on where they will appear.\"), mdx(\"p\", null, \"In our case \\u2014 We need to store Github Token ID in our Development Environment, so We could probably stay save at level 1 (If we didn't push the config file accidentally)\"), mdx(\"h2\", {\n    \"id\": \"why-still-proceed-further-above-level-1\"\n  }, \"Why still proceed further 'above' level 1?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To learn. - That's basically it.\")), mdx(\"h2\", {\n    \"id\": \"1-installing-vault\"\n  }, \"#1 Installing Vault\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For this I recommend you head into \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.vaultproject.io/downloads\"\n  }, \"Hashicorp Vault Installation Docs\"), \".\\nI'm on arch linux so a command \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo pacman -Syu vault\"), \" is enough for me to install vault\")), mdx(\"h2\", {\n    \"id\": \"2-turning-on-vault-server\"\n  }, \"#2 Turning on Vault server\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"With command \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault server -dev\"), \"\\nAfter executing this command, we'll see an important information for further configuration\\n\", mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"https://imgur.com/DUq7Q01.png\",\n    \"alt\": \"information\"\n  }))), mdx(\"h2\", {\n    \"id\": \"3-assigning-vault_token-and-vault_addr\"\n  }, \"#3 Assigning $VAULT_TOKEN and $VAULT_ADDR\"), mdx(\"p\", null, \"We need to overwrite these tokens with commands:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"export VAULT_ADDR='http://127.0.0.1:8200'\"), \" and also your token with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"export VAULT_TOKEN=\\\"<ROOT_TOKEN_HERE>\\\"\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Hashicorp \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vault\"), \" command uses its own API, If we wouldn't assign the $VAULT_ADDR, then every API request would be done with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"https\"), \" protocol. Every request like that won't work, because we only run localhost environment with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"http\"), \" protocol\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/tZKUoiB.png\",\n    \"alt\": \"error\"\n  })), mdx(\"h2\", {\n    \"id\": \"4-logging-in-to-vault\"\n  }, \"#4 Logging in to vault\"), mdx(\"p\", null, \"With command \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vault login\")), mdx(\"p\", null, \"We could accomplish the same thing without the prompt with the help of piping our $ROOT_TOKEN\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"echo $VAULT_TOKEN | vault login -\")), mdx(\"h2\", {\n    \"id\": \"setting-up-usernamepassword-based-authentication\"\n  }, \"Setting up Username:password based authentication\"), mdx(\"p\", null, \"Logging in with root token can be troublesome, especially if we don't need this many permissions in our daily usage. So let's set up different authentication method called \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"userpass\"), \" with these steps:\"), mdx(\"h3\", {\n    \"id\": \"1-setting-up-vault_addr-and-vault_token-as-previously\"\n  }, \"1. Setting up $VAULT_ADDR and $VAULT_TOKEN as previously\"), mdx(\"h3\", {\n    \"id\": \"2-login-with-vault-login\"\n  }, \"2. Login with \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"vault login\")), mdx(\"h3\", {\n    \"id\": \"3-enabling-userpass\"\n  }, \"3. Enabling userpass\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault auth enable userpass\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"TIP\"), \" - You can always execute command \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vault path-help auth/userpass\"), \" to get further info on how to use this auth method\\nThis is so awesome, because It also tells us that we can implement Multi-Factor-Implementation - that's crazy!\\nAlso it tells us how to reset a password, update their policies and which users can authenticate\")))), mdx(\"h3\", {\n    \"id\": \"4-creating-user\"\n  }, \"4. Creating user\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault write auth/userpass/users/<YOUR_CHOSEN_USERNAME> password=<YOUR_CHOSEN_PASSWORD>\"), \" To create an user\", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"We can confirm if we managed to add a new user with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vault  list/userpass/users\"), \" command\")))), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"We could login now with: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault login -method=userpass --username=<YOUR_CHOSEN_USERNAME>\"), \" command, but hang on! Because we won't be able to access our $GITHUB (TOKEN), because we don't have as a new created user permission to read them! Firstly we should create this policy\")), mdx(\"h3\", {\n    \"id\": \"5-writing-a-policy-to-access-our-secrets-in-secret-vault\"\n  }, \"5. Writing a policy to access our secrets in secret/ vault\"), mdx(\"p\", null, \"The command syntax to write a new policy is:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault policy write [name_of_new_policy] [policy_file.hcl] \"), \"\\nSo it requires a \", \"[policy_file]\", \" which we apparently do not have. Let's write it then.\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"github.hcl\"), \":\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"path \\\"secret/*\\\" {\\n    capabilities = [\\\"read\\\", \\\"list\\\"]\\n}\\n\")), mdx(\"p\", null, \"That's seriously it for our use case! :D. We allow read and list operations. Let's write it with command:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault policy write github github.hcl \"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"If you encounter any parsing issues this the command above, use:\")), mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"vault policy write github - << EOF\\npath \\\"secret/*\\\" {\\n    capabilities = [\\\"read\\\", \\\"list\\\"]\\n}\\nEOF\\n\")), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"And now let's assign this policy to our account:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vault write auth/userpass/users/<YOUR_CHOSEN_USERNAME> password=<YOUR_CHOSEN_PASSWORD> policies=github\"))), mdx(\"p\", null, \"Now, I know you want to login and test it out!, But let's add those secrets first! (Because as the unprivileged user we won't have this luxury! :P)\"), mdx(\"h2\", {\n    \"id\": \"5-putting-your-github-key-to-hashicorp-vault\"\n  }, \"#5 Putting your Github key to Hashicorp Vault\"), mdx(\"p\", null, \"with:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vault kv put secret/email key=<YOUR_EMAIL_HERE>\")), mdx(\"p\", null, \"Also, I want to add secret called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"email\"), \". Now, many of you might argue if it's really a secret... I'd be using it in shell scripts, so I think I'll recognize it as a secret\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vault kv put secret/email key=<YOUR_TOKEN_HERE>\")), mdx(\"h2\", {\n    \"id\": \"6-logging-in-and-testing-these-policies\"\n  }, \"#6 Logging in and testing these policies!\"), mdx(\"p\", null, \"Now lets login with:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vault login -method=userpass --username=<YOUR_CHOSEN_USERNAME>\")), mdx(\"p\", null, \"Now - \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"the important part\"), \" is to overwrite our VAULT_TOKEN variable with the user token.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/tYpNEf4.png\",\n    \"alt\": \"user_token\"\n  })), mdx(\"p\", null, \"We can see the big \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WARNING!\"), \" there. Essentially if we won't switch then we would still be interacting with the Hashicorp's API with our root token.\"), mdx(\"p\", null, \"If you've done everything correctly then you've got the Hashicorp Vault set-up!\"), mdx(\"h2\", {\n    \"id\": \"7-migrating-dev-environment-to-production\"\n  }, \"#7 Migrating Dev Environment to 'Production'\"), mdx(\"p\", null, \"Now that we've seen the process of configuration, let's begin to work with non-dev Hashicorp's vault environment, there are several reasons to do that:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Dev environment runs in 'unsealed' state by default - This essentially means that all the secrets are decrypted at\\nthe start of the vault.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dev environment also runs with storage in-memory. Meaning that it offers no persistence to the secrets We're storing. All data is lost when Vault or the machine on which it is running is restarted.\")), mdx(\"p\", null, \"The whole process is explained in Hashicorp Vault's Docs about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://learn.hashicorp.com/tutorials/vault/getting-started-deploy\"\n  }, \"Deploying\")), mdx(\"h3\", {\n    \"id\": \"1-writing-confighcl\"\n  }, \"1. Writing config.hcl\"), mdx(\"p\", null, \"I've prepared one with following contents:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"storage \\\"file\\\" {\\n  path    = \\\"/mnt/vault/data\\\"\\n}\\n\\nlistener \\\"tcp\\\" {\\n  address     = \\\"127.0.0.1:8200\\\"\\n  tls_disable = \\\"true\\\"\\n}\\n\\n\\napi_addr = \\\"http://127.0.0.1:8200\\\"\\nui = true\\n\\n\")), mdx(\"p\", null, \"I'm using file system storage backend with\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"storage \\\"file\\\" {\\n  path    = \\\"/mnt/vault/data\\\"\\n}\\n\")), mdx(\"p\", null, \"We need to also create this path with ```sudo mkdir /mnt/vault/data\\\".\"), mdx(\"p\", null, \"And we can start our server with the command:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vault server -config=config.hcl\")), mdx(\"h3\", {\n    \"id\": \"2-vault-init\"\n  }, \"2. Vault init:\"), mdx(\"p\", null, \"After starting vault server we can access the website with basic 'initialization'\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/1qHRBzF.png\",\n    \"alt\": \"init\"\n  })), mdx(\"p\", null, \"It tells us to specify the number of key shares - These tokens will be used to the process of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"unsealing vault\"), \" - each key should be owned by each person administrating the vault. Because It's a local setup I'll set each of the form input to '1'\"), mdx(\"p\", null, \"After that:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/U210xK3.png\",\n    \"alt\": \"init-success\"\n  })), mdx(\"p\", null, \"I recommend downloading the file with keys, moving this file \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"outside of your home folder\"), \", changing the owner of this file to root user with\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chown root <vault_key_file>\"), \"\\nand setting up permission to read-only with\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chmod 400 <vault_key_file>\")), mdx(\"p\", null, \"There's also root key to login\"), mdx(\"h3\", {\n    \"id\": \"migrating-yeah\"\n  }, \"'Migrating'... Yeah...\"), mdx(\"p\", null, \"I didn't expect that to be honest, but we have to repeat the whole process of creating a user, adding policy again. To make things easier for you and myself I've created this simple bash script:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"#!/bin/bash\\n\\nexport VAULT_ADDR=\\\"http://127.0.0.1:8200\\\"\\nexport VAULT_TOKEN=\\\"\\\"\\nYOUR_CHOSEN_USERNAME=\\\"\\\"\\nYOUR_CHOSEN_PASSWORD=\\\"\\\" # ENTER YOUR PASSWORD HERE, OR ENVIRONMENT VARIABLE WHERE THE PASSWORD IS LOCATED\\nYOUR_EMAIL_HERE=\\\"\\\"\\nYOUR_GITHUB_TOKEN_HERE=\\\"\\\"\\n\\n\\necho $VAULT_TOKEN | vault login -\\n\\nvault auth enable userpass\\n\\nvault policy write github - << EOF\\npath \\\"secret/*\\\" {\\n    capabilities = [\\\"read\\\", \\\"list\\\", \\\"create\\\", \\\"update\\\"]\\n}\\nEOF\\n\\n\\n\\nvault write auth/userpass/users/\\\"${YOUR_CHOSEN_USERNAME}\\\" password=\\\"${YOUR_CHOSEN_PASSWORD}\\\" policies=github\\n\\nvault secrets enable -path=secret/ kv\\n\\nvault kv put secret/github/email key=\\\"${YOUR_EMAIL_HERE}\\\"\\necho $VAULT_TOKEN\\nvault kv put secret/github/GITHUB_TOKEN key=\\\"${YOUR_GITHUB_TOKEN_HERE}\\\"\\n\\nunset VAULT_TOKEN\\n\\nvault login -method=userpass username=\\\"${YOUR_CHOSEN_USERNAME}\\\"\\n\")), mdx(\"p\", null, \"After the execution of the script, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"export VAULT_TOKEN=<YOUR_USERNAME_TOKEN>\"), \" and test it.\"), mdx(\"p\", null, \"After testing remove the script completely (don't forget the trash directory) or delete the hard-coded credentials\"), mdx(\"h2\", {\n    \"id\": \"integrating-it-with-a-bash-alias\"\n  }, \"Integrating it with a bash alias:\"), mdx(\"p\", null, \"One thing is missing from the Hashicorp's documentation and that is - lack of setting up vault as systemd service. Fortunately I stumbled across this blog post:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.vivekv.com/hashicorp-vault-systemd-startup-script.html\"\n  }, \"https://blog.vivekv.com/hashicorp-vault-systemd-startup-script.html\")), mdx(\"p\", null, \"We don't need to do everything described in this blog. There are little to no steps:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open the file \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/usr/lib/systemd/system/vault.service\"), \"\\nand see the contents of it:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[Unit]\\nDescription=Vault server\\nRequires=basic.target network.target\\nAfter=basic.target network.target\\n\\n[Service]\\nUser=vault\\nGroup=vault\\nPrivateTmp=yes\\nProtectSystem=full\\nProtectHome=read-only\\nCapabilityBoundingSet=CAP_IPC_LOCK\\nEnvironment=GOMAXPROCS=2\\nExecStart=/bin/vault server -config=/etc/vault.hcl\\nKillSignal=SIGINT\\nTimeoutStopSec=30s\\nRestart=on-failure\\nStartLimitInterval=60s\\nStartLimitBurst=3\\n\\n[Install]\\nWantedBy=multi-user.target\\n\")), mdx(\"p\", null, \"We want to replace the existing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/vault.hcl\"), \" file with our config. with\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo cp <PATH_TO_OUR_CONFIG> /etc/vault.hcl\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Execute\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"systemctl daemon-reload && systemctl start vault && systemctl enable vault\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"then check if it has successfully started with\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"systemctl status vault\"), \". If it didn't, then check the logs with:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo journalctl -u vault.service\")))), mdx(\"p\", null, \"Also let's add automatically export the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$VAULT_ADDR\"), \" variable. We could do that in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".bashrc\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".bash_profile\"), \" or just like the author of the post did, place a bash script here ->\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/profile.d/vault.sh\"), \" with the contents of:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"#!/bin/bash\\nexport VAULT_ADDR='http://127.0.0.1:8200'\\n\\n\")), mdx(\"p\", null, \"Now let's begin with automating the process of getting these keys, unfortunately, it's hard to implement getting the keys automatically with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git push\"), \" command. We may get the idea of doing that later... For now though, let's create an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"alias\"), \" for the set of vault commands.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"function gitgot(){\\n\\n    vault login username=<YOUR_USERNAME_HERE>\\n    vault kv get -field=key secret/github/email\\n    vault kv get -field=key secret/github/GITHUB_TOKEN\\n}\\n\")), mdx(\"p\", null, \"Put this function inside a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".bash_profile\"), \" file or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".zprofile\"), \" file\"), mdx(\"p\", null, \"Now when you start a new terminal, executing command \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gitgot\"), \" should ask you for username and password, and if credentials were correct both email and GITHUB_TOKEN would be printed out.\"), mdx(\"p\", null, \"We can also set caching of these credentials when doing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git push\"), \" to be around 4hours with command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git config --global credential.helper 'cache --timeout 14400'\\n\")), mdx(\"h2\", {\n    \"id\": \"caveats\"\n  }, \"Caveats:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We've used a default secrets path called \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"secret/github\"), \". I've done that because I don't see (yet!) another use-case of Hashicorp Vault on my daily basis workflow. However, If I had to manage more secrets and more API keys I would probably diverse these tokens to different profiles.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"That's it!\"), \" It was seriously a long struggle for me, I personally encountered many issues with setting this up, and though It may not be perfect having vault implemented feels so satisfying! I hope you've also learned something and because that scenario is meant to run only locally maybe you'll do the setup yourself :) Cheers.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"47856953-c5d1-5172-b43a-62d0f5935b2e","fields":{"slug":"/Old-Posts/2021-04-19-Setting-Up-Hashicorp-Vault-To-Manage-Github-Token","title":"2021-04-19-Setting-Up-Hashicorp-Vault-To-Manage-Github-Token"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Concept of Preventing Insufficient Logging & Monitoring\",\n  \"date\": \"2021-04-26 06:46:00 +0100\",\n  \"categories\": [\"DevSecOps\", \"Monitoring\"],\n  \"tags\": [\"devsecops\", \"monitoring\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"intro\"\n  }, \"Intro\"), mdx(\"p\", null, \"Security Breaches happen, and also you should be prepared for them to happen, expect them! With this mindset you can minimize the impact of the breach.\"), mdx(\"p\", null, \"With \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"logging,\"), \" we can be better prepared for the breach. I'll explain this topic more deeply in this post :)\"), mdx(\"p\", null, \"Also let's remember that Insufficient Logging & Monitoring \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"is in OWASP 2017 TOP 10!\")), mdx(\"h2\", {\n    \"id\": \"the-sources-of-logfiles-and-on-which-well-be-focusing\"\n  }, \"The sources of logfiles and on which we'll be focusing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Security Software - such as firewalls and anti-virus softwares\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Operating Systems\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Networking Equipment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Applications\"), \" <- That's the one I'll be writing today.\")), mdx(\"h2\", {\n    \"id\": \"attack-scenario-chain-where-logging-is-crucial\"\n  }, \"Attack scenario chain where logging is crucial\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Any type of brute-force attacks like \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Credential Stuffing\"), \" - we could detect and prevent that during the attack.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When the attacker gets a foothold in e.g. internal network administrator panel and tries to learn about company's infrastructure - We could also detect this with logging\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When the attacker performs Data Exfiltration, we could detect these big data transfers and also stop them\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"But \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"without any logging\"), \" and monitoring the defenders will learn about the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"incident after the attacker requests a ransom!\"))), mdx(\"p\", null, \"With logging, we could:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Detect the intrusion\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Prevent worse from happening\")), mdx(\"h2\", {\n    \"id\": \"insufficient-logging-and-monitoring-is\"\n  }, \"Insufficient Logging and Monitoring is...\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Lack of Quantity\"), \" of logging events.\")), mdx(\"p\", null, \"After that We've increased the Quantity we can focus more \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"about Quality\"), \" of these logs. For example add a timestamp.\"), mdx(\"h2\", {\n    \"id\": \"other-issues-with-logging-and-monitoring\"\n  }, \"Other issues with Logging and Monitoring:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of Availability - When we can't access the logs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No Alerting Thresholds - When even with the sufficient logs we don't get any alerts, and we can't have timely response.\")), mdx(\"h2\", {\n    \"id\": \"the-process-of-logging-monitoring-alerting\"\n  }, \"The process of Logging, Monitoring, Alerting.\"), mdx(\"p\", null, \"To have the process completed, we need to have all these 3 elements (Infinity Stones!)\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Logging\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"What\"), \" event happened?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"When\"), \" the event happened?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Where\"), \" the event happened?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Who\"), \" performed the event?\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Monitoring\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"which you can achieve only with proper logging\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Providing timely detections\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Alerting - Actively informing someone about the event that is peculiar.\")), mdx(\"p\", null, \"Why not Log and Monitor everything?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Legislation restricts the data we wish to log\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We might break Confidentiality 'rule'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We might get Information Overload, which would be harder to analyze\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cost of Processing logs would be much bigger.\")), mdx(\"h2\", {\n    \"id\": \"in-which-events-are-we-interested\"\n  }, \"In which events are we interested?\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Authentication events (\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Successes\"), \" and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Failures\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Authorization events (When the user tries to access a certain parts of the application - Focus on \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Failures\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use of Privileges (When certain administrative function is invoked - \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Successes\"), \" and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Failures\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Application Specific Events \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Decide whether it makes sense to log these\"), \"(Application errors, Startup and shutdown, Configuration changes, Application state information, Input and output validation failures)\")), mdx(\"h2\", {\n    \"id\": \"the-place-and-timely-of-when-to-decide-on-what-to-log\"\n  }, \"The place and timely of when to decide on what to log:\"), mdx(\"p\", null, \"If We refer to SDLC life-cycle ideally we should consider what to log in\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Defining Requirements phase\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Designing phase\")), mdx(\"p\", null, \"However, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"enabling monitoring, tweaking it and configuring logging\"), \" is done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Deployment phase\")), mdx(\"h2\", {\n    \"id\": \"improving-the-quality-of-the-logged-data\"\n  }, \"Improving the Quality of the Logged Data\"), mdx(\"h3\", {\n    \"id\": \"where-should-they-be-stored\"\n  }, \"Where should they be stored?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On a remote logging server like  \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"AWS CloudFormation\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Cloud Logging in Google Cloud\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Locally (\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Which is not recommended\"), \", However if it's inevitable then we should store in on a separate partition/disks and in some way encrypted with limited access (which would damage the Availability of the data - that's why It's not recommended))\")), mdx(\"h3\", {\n    \"id\": \"the-formatcontents-of-log-files\"\n  }, \"The Format/Contents of Log files:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"What\"), \" event happened?\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The type of event - what happened?\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"When\"), \" the event happened?\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the log entry was generated on the application side\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the log server received this log\\nAll of that with \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"synchronized time sources!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Take time zones into consideration also. (Standard RFC 3339)\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Where\"), \" the event happened?\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Log source address - responsible for logging the entry\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Originating address - Responsible for generating the event\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Who\"), \" performed the event?\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logged on user / Unique Identifier\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Log standards\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Syslog - Standard RFC 5424\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Common Log Format\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use a company standard, when available - This would simplify and integrate with the existing logging functionality\")), mdx(\"h3\", {\n    \"id\": \"syslog-severity-events\"\n  }, \"Syslog Severity Events\"), mdx(\"p\", null, \"Many Log Standards also log severity as metadata - how serious is the event:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"0 - Emergency: system is unusable\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 - Alert: Action must be taken immediately\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2 - Critical: Critical conditions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3 - Error: error conditions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4 - Warning: warning conditions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"5 - Notice: normal but significant condition\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"6 - Informational: informational messages\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"7 - Debug: debug-level messages\")), mdx(\"p\", null, \"It's good to be consistent with these Severity Levels and not use different type of severity levels on a different application.\"), mdx(\"h3\", {\n    \"id\": \"anonymizing-the-data\"\n  }, \"Anonymizing the data\"), mdx(\"p\", null, \"Often refers to replacing the UUID with the random value. To achieve this result we can:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Encrypt the Data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pseudonymization\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Encryption\"), \" - is what it's normally stands for - converting personal data to encrypted format. This though requires the Encryption Key and managing these secrets also is troublesome. If we revoked the secret then all the backed up logs would become useless. Decryption of these logs will also affect the performance.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Pseudonymization\"), \" - Replacing personal data with an artificial identifier (pseudonym), requires Link table that would link the pseudonym to original data\"), mdx(\"h2\", {\n    \"id\": \"log-management\"\n  }, \"Log Management\"), mdx(\"h3\", {\n    \"id\": \"log-file-life-cycle\"\n  }, \"Log File Life cycle\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Generation\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Transmission\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Aggregation\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Analyzing\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Archiving\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Aggregation\"), \" - Means to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"remove duplicate events (very rare in WebApps),\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add structure,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remove Sensitive Fields if these weren't remove in previous stages.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add Input Validation, Encoding, White-Listing/Black-Listing - Because there's still an option for an attacker to perform \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Log Poisoning\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Analyzing\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Determine what is normal - This takes time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anomaly detection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using Attack signatures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Escalation, Response, Alerting\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Archiving\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Moving data from hard storage to back up media.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Preserving Decryption keys if it's needed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Securing Log Data\")), mdx(\"h3\", {\n    \"id\": \"response-strategies\"\n  }, \"Response Strategies\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We could start from the existing security policies (NIST-800-61)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Preparation -> identification -> containment\")), mdx(\"h2\", {\n    \"id\": \"available-solutions\"\n  }, \"Available Solutions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://appsensor.org/\"\n  }, \"OWASP AppSensor\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://owasp.org/www-project-modsecurity-core-rule-set/\"\n  }, \"OWASP ModSecurity (Open-Source WebApp firewall)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.elastic.co/what-is/elk-stack\"\n  }, \"ELK Stack (Elastic Search, Logstash, Kibana)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Security Information Event Management (SIEM) - To manage them\")), mdx(\"h2\", {\n    \"id\": \"testing-testing-testing\"\n  }, \"Testing, Testing, Testing!\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Observe alerts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check quantity and quality of the logs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Validate procedures (Check if these are false alerts)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recheck configuration.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"3da12806-2fbd-561a-8115-6414d00cceae","fields":{"slug":"/Old-Posts/2021-04-26-Preventing-Insufficient-Logging-and-Monitoring","title":"2021-04-26-Preventing-Insufficient-Logging-and-Monitoring"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Basics of Kubernetes (Without Hands-on Practice)\",\n  \"date\": \"2021-05-03 06:46:00 +0100\",\n  \"categories\": [\"DevSecOps\", \"Kubernetes\"],\n  \"tags\": [\"devsecops\", \"kubernetes\", \"containers\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"intro\"\n  }, \"Intro:\"), mdx(\"h2\", {\n    \"id\": \"what-i-want-you-to-know-already\"\n  }, \"What I want you to know already:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What are containers - I recommend this course -> \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=fqMOX6JJhGo\"\n  }, \"freeCodeCamp Docker\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to create them in Dockerfiles, for that I recommend blackarch-zsh \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://cloufish.github.io/blog/posts/creating-your-own-docker-pentesting-container/\"\n  }, \"blog-post\"), \" where I explain how I created blackarch-zsh container.\")), mdx(\"h2\", {\n    \"id\": \"what-is-kubernetes\"\n  }, \"What is Kubernetes?\"), mdx(\"p\", null, \"It's a way of orchestrating containers...\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's made by Google\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"While being still open-source project\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stable and mature, even though one of its first version was back in 2015!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's shortened name is K8s - pronunciation of this is \\\"Keights\\\" (I know this may not be accurate pronunciation to interpret)\")), mdx(\"h2\", {\n    \"id\": \"why-we-use-it\"\n  }, \"Why we use it:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To manage containers and microservices of course,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"But also it doesn't require developer to know what hardware he wants to use\")), mdx(\"h2\", {\n    \"id\": \"explaining-the-jargon\"\n  }, \"Explaining the Jargon:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"monolith\"), \" - a massive application with all the code and elements bundled into one environment\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/Om67W4j.png\",\n    \"alt\": \"monolith\"\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Microservice App - when all these elements from monolith app are divided into little micro-services\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/oCOCjdL.png\",\n    \"alt\": \"micro-service\"\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Orchestration\"), \" - refers into combining/organizing these micro-services to work together\")), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Pros\"), \" of Microservices are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"They can be scaled more independently\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Also developed, patched, updated independently\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It can be run anywhere\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cons\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It can be complex!\")), mdx(\"h1\", {\n    \"id\": \"kubernetes-architecture\"\n  }, \"Kubernetes Architecture\"), mdx(\"h2\", {\n    \"id\": \"k8s-cluster\"\n  }, \"K8s cluster\"), mdx(\"p\", null, \"Is a place where we store all of our \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"nodes\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Master Control Plane\"), \"/\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Kubernetes Mater\")), mdx(\"p\", null, \"On these nodes many \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Pods\"), \" run\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/ULHozud.png\",\n    \"alt\": \"cluster\"\n  })), mdx(\"p\", null, \"I know it does sound complicated, but hang on! As you read this blog-post, write these stuff down it'll become clear!\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Master Control Panel\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Monitors the cluster\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Makes the changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Schedules the work\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reacts to event\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Node\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Where we run our Application\")), mdx(\"h2\", {\n    \"id\": \"process-of-packaging-the-application\"\n  }, \"Process of Packaging the application:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Refers to containerizing our app - Make it run as the container\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Then we wrap that into a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Pod\"), \" (it's needed by Kubernetes!)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"We also need to wrap it into \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"deployment\"), \" controller - If we want it to be scalable.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"We perform all these steps in a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"file\"), \"!\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"We then transfer this configuration file to the Kubernetes \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Master\"), \", and then it handles the situation by himself.\"))), mdx(\"h2\", {\n    \"id\": \"masters--control-plane\"\n  }, \"Masters / Control Plane\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Brain of the cluster\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Multi-master Control Plane\"), \" - Concept stands for splitting the Control Plane into smaller ones which would be responsible for a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"particular\"), \" failure domains - because sticking them on the same data-center/RACK is definitely \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"not recommended\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"How many Masters to have?\"), \" - 3 or 5, but definitely not an even number! (not 2 for example), because if one master fails, the remaining clusters must have a majority! If for example we have 2 masters and one of them fails, then the remaining one master will transform into \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"read-only mode.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Active-Passive Multi Master Model\"), \" - Where only one master is only actively making changes to the cluster, while other masters reflect/copy what the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"leader\"), \" master did\"), mdx(\"p\", null, \"Every Master runs on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"a separate Linux environment\")), mdx(\"p\", null, \"Every master runs every \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"master-component\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hosted K8s Control Plane\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in Cloud-Hosted Masters are hidden from you\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloud-Provider run your Control Plane \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"as a service\"), \", and you can interact with it with API endpoint\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WARNING\"), \" - Don't run user or business application on a Master\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"kube-apiserver\"), \" \\u2014 is a Front-end to the control plane\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Exposes the API\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consumes JSON/Yaml\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cluster store\"), \" - Where the config, state, apps running on master gets stored\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Persists cluster state and config\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Based on etcd\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"With that Performance is critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You should have backups of these Cluster store and regularly test them\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Kube-controller-manager\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Controller of other controllers like:\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Node controller\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Deployment controller\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Endpoints controller\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Watches loops\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Observes state and compare it with a desired one\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Kube-scheduler\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Watches API Server for new work tasks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Assigns work to nodes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Affinity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Constraints\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taints\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Resources\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(Really complex stuff in general)\")))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/x6P62BZ.png\",\n    \"alt\": \"Master\"\n  })), mdx(\"h2\", {\n    \"id\": \"nodes\"\n  }, \"Nodes\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"kubelet\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Main Kubernetes agent that runs on every node\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Registers node with cluster\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Watches API Server for work tasks (Pods)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Executes Pods\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reports back to Masters\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"container-runtime\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pluggable: Container Runtime Interface (CRI)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Docker (getting deprecated),\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"containerd,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CRI-O,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kata\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Low-level container intelligence\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"kube-proxy\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Networking component\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pod IP addresses\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lightweight Load-Balancing across all the Pods behind the service\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/UCzziwk.png\",\n    \"alt\": \"node\"\n  })), mdx(\"h2\", {\n    \"id\": \"declarative-way-of-configuring-kubernetes\"\n  }, \"Declarative way of configuring Kubernetes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In configuration file, we only \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"declare\"), \" \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"what we want\"), \" the Kubernetes to 'look like'. In Declarative way we don't care on how to achieve everything, this is handled by the Kubernetes itself!\")), mdx(\"p\", null, \"If we declared that...:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We always want 3 instances of Front-End Pod running\\nBut when one of these Pods are taken down, the desired state vs observed state is different! When that happens, Kubernetes brings up the new Pod or even a Node.\")), mdx(\"h2\", {\n    \"id\": \"pods\"\n  }, \"Pods\"), mdx(\"p\", null, \"It consists of containers (e.g. Docker ones).\\nFor containers to be orchestrated - \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"They must be in a Pod!\")), mdx(\"p\", null, \"The more accurate \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"definition of Pods\"), \" is that they're shared execution environment for containers to run on\\nAll containers in the same Pod share the same resources\"), mdx(\"p\", null, \"It's mostly preferred though to run only one container in single Node, because usually there's no need of sharing resources\"), mdx(\"p\", null, \"By the term of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"scaling\"), \" we mean \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"increasing the number of Pods running\"), \", not the number of containers in a single Pod\"), mdx(\"p\", null, \"However, there is a use case of running multi-container Pods, such as:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stuff that shouldn't be done on the App directly, due to security reasons like \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Decrypting, Encrypting\"), \" traffic over the network, and other networking stuff\")), mdx(\"p\", null, \"Like we said earlier, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Pods do not offer Scalability\"), \" by default for them to be scalable, they must be wrapped into a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Deployment\"), \" controller, but Pods themselves provide nice meta-data for Kubernetes to work with!\"), mdx(\"h2\", {\n    \"id\": \"networking-with-kubernetes-services\"\n  }, \"Networking with Kubernetes Services.\"), mdx(\"p\", null, \"When new Pods are re-deployed (e.g. after it dies) or after scaling up, or even updating They got assigned a new IP Address, which can be \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"problematic from Networking\"), \" Administrator's perspective\"), mdx(\"p\", null, \"When We want to make Networking in Kubernetes easier we can spin up \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Service Object\"), \". It sits in front of the Pods and provide them a stable IP and DNS names and it Load-Balances them.\\nIt handles Networking partially for us.\"), mdx(\"h3\", {\n    \"id\": \"labels\"\n  }, \"Labels\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Are the way of categorizing the Pods, we can put the labels like:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Version of the App e.g 1.3\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"prod/dev label\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"back-end / front-end\")), mdx(\"p\", null, \"We can then connect these Labels with our Networking Service Object,\\nThen send a declarative 'command'/request that 'I want all 1.3 Pods to be updated into 1.4 version and to label them as 1.4` - Ta-daa!\\nAnd also, If We want to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"get rid of the 1.3 versions\"), \" to be managed, then we only need to do one thing... \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Delete the label '1.3' from the Network Service Object\"), \".\\nAnd then these Pods won't get \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"any\"), \" traffic!\"), mdx(\"p\", null, \"There are other things to mention with Network Service Objects:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Only sends traffic to the healthy Pods\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can do both TCP and UDP\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can send traffic to endpoints outside the cluster\")), mdx(\"h2\", {\n    \"id\": \"deployment-controllers\"\n  }, \"Deployment Controllers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Watches API Server for new Deployments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Compares observed state with desired state\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Enabled Self-Healing, running updates, version rollbacks\")), mdx(\"p\", null, \"So we \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"declare a desired state\"), \" in config file, for example that 'We want 4 Pods/Replicas running'\"), mdx(\"p\", null, \"Deployment Controller watches the observed state with desired state and fixes any abnormality to the desired state, as we discussed.\"), mdx(\"h2\", {\n    \"id\": \"kubernetes-api-and-api-server\"\n  }, \"Kubernetes API and API Server\"), mdx(\"p\", null, \"Kubernetes run very different objects and combines them together like Deployment Controllers, Network Service Object, Pods\"), mdx(\"p\", null, \"API is like catalog of features/services with.\"), mdx(\"p\", null, \"The API helps us to better communicate with Kubernetes API Server and vice-versa\"), mdx(\"p\", null, \"We use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl\"), \" command line tool to communicate with the API Server and also to transfer Manifests (Config files) to the API K8s Server\\na\"), mdx(\"h2\", {\n    \"id\": \"summary-of-the-k8s-architecture\"\n  }, \"Summary of the K8s Architecture:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/GZL3J3t.png\",\n    \"alt\": \"Summary\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"e003c66d-ab5c-5d68-9346-70447eac4695","fields":{"slug":"/Old-Posts/2021-05-03-Basics-Of-Kubernetes","title":"Intro:"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Basics of Kubernetes (Hands-On Experience)\",\n  \"date\": \"2021-05-10 06:46:00 +0100\",\n  \"categories\": [\"DevSecOps\", \"Kubernetes\"],\n  \"tags\": [\"devsecops\", \"kubernetes\", \"containers\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"kubectl\"\n  }, \"kubectl\"), mdx(\"p\", null, \"A command-line tool to access the K8s API Server\"), mdx(\"h3\", {\n    \"id\": \"installation\"\n  }, \"Installation\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kubernetes.io/docs/tasks/tools/\"\n  }, \"Here are the docs to guide you with installation\")), mdx(\"p\", null, \"On my host machine, I only run\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo pacman -Syu kubectl\")), mdx(\"h3\", {\n    \"id\": \"installing-kubernetes-itself\"\n  }, \"Installing Kubernetes itself\"), mdx(\"p\", null, \"We have 2 choices here\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Docker Desktop - Easier one, however, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"only Windows and Mac are suppoerted\"), \" :/\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"minicube - More difficult than Docker Desktop, but I think It's better to struggle a bit but get more accurate, command line experience\")), mdx(\"p\", null, \"If you want to use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docker-Desktop\"), \" because you're on Mac or Windows, then to install it head over to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.docker.com/products/docker-desktop\"\n  }, \"HERE\"), \" and download .exe file\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"minicube\"), \" - Head over \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://minikube.sigs.k8s.io/docs/start/\"\n  }, \"HERE\"), \" and proceed from their documentation\"), mdx(\"h2\", {\n    \"id\": \"managing-pods\"\n  }, \"Managing Pods\"), mdx(\"h3\", {\n    \"id\": \"process-overview\"\n  }, \"Process Overview:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Build container image out of the app,\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Store it in the container registry (e.g. Docker Hub)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create Manifest file in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".yml\"), \" format that would define the Pod's structure\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Send it to the K8s API Server\")), mdx(\"p\", null, \"We'll focus on the 3 and 4 step, because we already have containerized apps - by it, I mean even the simplest ones, like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mongodb\"), \" container \\u2014 that is also a container app!\"), mdx(\"p\", null, \"This \\u2192 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/kubernetes/examples\"\n  }, \"repo\"), \" contains a lot of more examples to work on with Kubernetes\"), mdx(\"p\", null, \"I'll be choosing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Guestbook\"), \". And because I'm also a learner just like you, I'll do everything as described in Kubernetes own \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kubernetes.io/docs/tutorials/stateless-application/guestbook/\"\n  }, \"Tutorial/Guide\"), \" from now on.\"), mdx(\"h2\", {\n    \"id\": \"guestbook\"\n  }, \"Guestbook\"), mdx(\"h3\", {\n    \"id\": \"starting-minikube-cluster\"\n  }, \"Starting minikube cluster\"), mdx(\"p\", null, \"With \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"minikube start\")), mdx(\"p\", null, \"Then, if we run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl get po -A\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"NAMESPACE              NAME                                        READY   STATUS    RESTARTS   AGE\\nkube-system            coredns-74ff55c5b-87864                     1/1     Running   1          23d\\nkube-system            etcd-minikube                               1/1     Running   1          23d\\nkube-system            kube-apiserver-minikube                     1/1     Running   1          23d\\nkube-system            kube-controller-manager-minikube            1/1     Running   1          23d\\nkube-system            kube-proxy-bzqzx                            1/1     Running   1          23d\\nkube-system            kube-scheduler-minikube                     1/1     Running   1          23d\\nkube-system            storage-provisioner                         1/1     Running   2          23d\\nkubernetes-dashboard   dashboard-metrics-scraper-f6647bd8c-6tz59   1/1     Running   0          6m18s\\nkubernetes-dashboard   kubernetes-dashboard-968bcb79-2226c         1/1     Running   0          6m18s\\n\\n\")), mdx(\"p\", null, \"We'll see that there are various Kubernetes objects running like the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"etcd\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kube-apiserver-minikube\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"storage-provisioner\"), \".\"), mdx(\"p\", null, \"Many of them we discussed in previous blog-post related to Kubernetes.\"), mdx(\"p\", null, \"So as discussed in the kubernetes tutorial We need to create a Manifest of the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MongoDB Deployment Controller\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"apiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: mongo\\n  labels:\\n    app.kubernetes.io/name: mongo\\n    app.kubernetes.io/component: backend\\nspec:\\n  selector:\\n    matchLabels:\\n      app.kubernetes.io/name: mongo\\n      app.kubernetes.io/component: backend\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app.kubernetes.io/name: mongo\\n        app.kubernetes.io/component: backend\\n    spec:\\n      containers:\\n      - name: mongo\\n        image: mongo:4.2\\n        args:\\n          - --bind_ip\\n          - 0.0.0.0\\n        resources:\\n          requests:\\n            cpu: 100m\\n            memory: 100Mi\\n        ports:\\n        - containerPort: 27017\\n\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Let's analyze this file more in depth.\"), \" I think It'll help us write Manifests by ourselves.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"1> \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apiVersion: apps/v1\"), \" - That's easy to deduct, the API we use is from the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"apps group\"), \", and we use its v1\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"2>\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kind: Deployment\"), \" - This though is not so intuitive in the first glance, but It specifies the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"resource type\"))), mdx(\"p\", null, \"With command \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl explain --api-version=apps/v1 deployment\"), \" We can get more info about this resource type\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"metadata:\\n  name: mongo\\n  labels:\\n    app.kubernetes.io/name: mongo\\n    app.kubernetes.io/component: backend\\n\")), mdx(\"p\", null, \"We see that be assign metadata to this mongo service more specifically \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"labels\"), \" which are the same as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"tags\"), \" in other concepts,\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"spec:\\n  selector:\\n    matchLabels:\\n      app.kubernetes.io/name: mongo\\n      app.kubernetes.io/component: backend\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app.kubernetes.io/name: mongo\\n        app.kubernetes.io/component: backend\\n    spec:\\n      containers:\\n      - name: mongo\\n        image: mongo:4.2\\n        args:\\n          - --bind_ip\\n          - 0.0.0.0\\n        resources:\\n          requests:\\n            cpu: 100m\\n            memory: 100Mi\\n        ports:\\n        - containerPort: 27017\\n\")), mdx(\"p\", null, \"The spec section defines what state we desire for the object and in this scenario there are lots of them, let's break it down again.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"selector:\\n    matchLabels:\\n      app.kubernetes.io/name: mongo\\n      app.kubernetes.io/component: backend\\n\")), mdx(\"p\", null, \"We specify which Apps/Pods we want it to affect, here we see that we only want these apps which have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mongo\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"backend\"), \" labels.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"replicas: 1\"), \" - Simple, we want 1 copy of the deployment controller\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"template:\\n    metadata:\\n      labels:\\n        app.kubernetes.io/name: mongo\\n        app.kubernetes.io/component: backend\\n    spec:\\n      containers:\\n      - name: mongo\\n        image: mongo:4.2\\n        args:\\n          - --bind_ip\\n          - 0.0.0.0\\n        resources:\\n          requests:\\n            cpu: 100m\\n            memory: 100Mi\\n        ports:\\n        - containerPort: 27017\\n\")), mdx(\"p\", null, \"But this part is important, because \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"the replicas are made according to the template\"), \", and it basically tells it to run Kubernetes Pods with defined labels, and use containers with specified image, hardware resources and open port\"), mdx(\"p\", null, \"Why is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec\"), \" object used two times? \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The first time we used it to label our Deployment Component\"), \", then the use case is for a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"template:\"), \" for replicas. You will see that with the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Service component\"), \" we only use it once\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec\"), \" object format is not so consistent across other K8s objects, as we read the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/\"\n  }, \"API docs - kubernetes-objects\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The precise format of the object \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec\"), \" is different for every Kubernetes object, and contains nested fields specific to that object. The Kubernetes API Reference can help you find the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec\"), \" format for all the objects you can create using Kubernetes. For example, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec\"), \" format for a Pod can be found in PodSpec v1 core, and the spec format for a Deployment can be found in DeploymentSpec v1 apps.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Okay, back to deploying our app!!!\")), mdx(\"p\", null, \"Write the contents to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deployment.yml\"), \",\\nThen execute:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl apply -f mongo-deployment.yaml\")), mdx(\"p\", null, \"We'll get the output:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"deployment.apps/mongo created\\n\")), mdx(\"p\", null, \"Then to get the Pod We've created run\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl get pods\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"NAME                     READY   STATUS    RESTARTS   AGE\\nmongo-75f59d57f4-8kjp2   1/1     Running   0          93s\\n\")), mdx(\"p\", null, \"So our Deployment Controller is running!\"), mdx(\"p\", null, \"Now Let's create the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MongoDB Service\"), \", with very similar steps:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Copying this yml content:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"apiVersion: v1\\nkind: Service\\nmetadata:\\n  name: mongo\\n  labels:\\n    app.kubernetes.io/name: mongo\\n    app.kubernetes.io/component: backend\\nspec:\\n  ports:\\n  - port: 27017\\n    targetPort: 27017\\n  selector:\\n    app.kubernetes.io/name: mongo\\n    app.kubernetes.io/component: backend\\n\\n\")), mdx(\"p\", null, \"into mongo-service.yml file inside your App directory\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"(Here as you can see we use only \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec\"), \".)\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Apply it with\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl apply -f mongo-service-yml\"))), mdx(\"p\", null, \"And We'll \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"do the same\"), \" with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Guestbook Frontend Deployment\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Guestbook Frontend Service\"), \" just like the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kubernetes.io/docs/tutorials/stateless-application/guestbook/\"\n  }, \"tutorial\"), \" says\"), mdx(\"p\", null, \"And verify if replicas were made with:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl get pods -l app.kubernetes.io/name=guestbook -l app.kubernetes.io/component=frontend\")), mdx(\"p\", null, \"And If you've done everything the docs specified, your WebApp will be running\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/LZqCIkl.png\",\n    \"alt\": \"guesbook-frontend\"\n  })), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I know that there were little to no work from my part, looks like these docs have everything explained, which is amazing!\")), mdx(\"h3\", {\n    \"id\": \"conclusions-with-guestbook\"\n  }, \"Conclusions with Guestbook\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Writing Manifests in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".yml\"), \" format is essential, that's basically the main part of configuring the services in K8s. The best way to learn it is of course by writing them and analyzing more complex ones, for different \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kind:\"), \" objects.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"9f1dff95-109c-5dea-a760-6a4baf45eab7","fields":{"slug":"/Old-Posts/2021-05-10-Kubernetes-Basics-Hands-On","title":"2021-05-10-Kubernetes-Basics-Hands-On"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Security of Docker Containers\",\n  \"date\": \"2021-05-17 06:46:00 +0100\",\n  \"categories\": [\"DevSecOps\", \"Docker\"],\n  \"tags\": [\"devsecops\", \"docker\", \"containers\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"intro\"\n  }, \"Intro\"), mdx(\"p\", null, \"The use of Docker Containers has changed completely on how we deploy our applications, many though think that all the apps running in the container are completely isolated from the host system and at the same time secure by default (Partially there are, but thinking something is 100% secure is bad assumption.)On this blog-post I'll write about many mistakes in building Docker containers regarding their security.\"), mdx(\"h2\", {\n    \"id\": \"not-creating-non-root-user-on-our-container\"\n  }, \"Not creating non-root user on our container.\"), mdx(\"p\", null, \"We should always in Dockerfile create a non-root user and switch to it, after we perform all configuration in the Dockerfile requiring root user\"), mdx(\"p\", null, \"Many of the base image containers already set up non-root user, we only need to write the line\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-md\"\n  }, \"USER <created_username>\\n\")), mdx(\"p\", null, \"Somewhere at the end of our Dockerfile.\"), mdx(\"p\", null, \"If you don't want to check it up, you can create it with:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-md\"\n  }, \"RUN groupadd -gid 1000 <username> \\\\\\n&& useradd -uid 1000 -gid node --shell /bin/bash --create-home node\\n\")), mdx(\"h2\", {\n    \"id\": \"not-building-upon-a-distroless-image\"\n  }, \"Not building upon a distroless image\"), mdx(\"p\", null, \"When we base our image on some Linux Distribution, it contains many Linux executables like bash shell. The attacker might use these commands to do a fancy privilege escalation technique.\"), mdx(\"p\", null, \"To limit his actions and surface attack beforehand, we should build our app upon a distroless image. We do that with Multi-Stage building.\"), mdx(\"p\", null, \"Here's Dockerfile examples:\"), mdx(\"h3\", {\n    \"id\": \"golang-app\"\n  }, \"Golang App\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-md\"\n  }, \"# Start by building the application.\\nFROM golang:1.13-buster as build\\n\\nWORKDIR /go/src/app\\nADD . /go/src/app\\n\\nRUN go get -d -v ./...\\n\\nRUN go build -o /go/bin/app\\n\\n# Now copy it into our base image.\\nFROM gcr.io/distroless/base-debian10\\nCOPY --from=build /go/bin/app /\\nCMD [\\\"/app\\\"]\\n\")), mdx(\"h3\", {\n    \"id\": \"java-app\"\n  }, \"Java app\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-md\"\n  }, \"FROM openjdk:11-jdk-slim AS build-env\\nADD . /app/examples\\nWORKDIR /app\\nRUN javac examples/*.java\\nRUN jar cfe main.jar examples.HelloJava examples/*.class\\n\\nFROM gcr.io/distroless/java:11\\nCOPY --from=build-env /app /app\\nWORKDIR /app\\nCMD [\\\"main.jar\\\"]\\n\")), mdx(\"h3\", {\n    \"id\": \"nodejs-app\"\n  }, \"NodeJS app\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-md\"\n  }, \"FROM node:10 AS build-env\\nADD . /app\\nWORKDIR /app\\n\\nRUN npm ci --only=production\\n\\nFROM gcr.io/distroless/nodejs:10\\nCOPY --from=build-env /app /app\\nWORKDIR /app\\nCMD [\\\"hello.js\\\"]\\n\")), mdx(\"p\", null, \"Now, lets remember, that \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"these distroless application do not have a shell!\"), \" Because of this, we need to specify the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ENTRYPOINT [<app_name>]\"), \" inside our Dockerfile. This way the app container won't default to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CMD []\"), \" statement (which uses bash) and we'll be able to interact with our application in a distroless environment.\"), mdx(\"h2\", {\n    \"id\": \"looking-to-the-hosts-system-hardening\"\n  }, \"Looking to the Hosts System Hardening\"), mdx(\"p\", null, \"The examples on what things to look for are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"The containers should be run in a virtualized environment\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Using Container Optimized OS\"), \" e.g. from Google.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hard Disk Encryption\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"System updates\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Removing unnecessary packages\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Checking for open ports\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Enabling SELinux(Security Enchanced Linux), AppArmor\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Password policies to report any failed attempt of login\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Access Control\")), mdx(\"h2\", {\n    \"id\": \"not-using-container-security-image-scanner\"\n  }, \"Not using Container Security Image Scanner\"), mdx(\"p\", null, \"For example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"anchore\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"clair\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"OpenSCAP\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DockerBench\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"within many Cloud providers\")), mdx(\"p\", null, \"You should use them :P\"), mdx(\"h2\", {\n    \"id\": \"using-rootless-docker-mode-badly\"\n  }, \"Using Rootless Docker 'Mode' badly.\"), mdx(\"p\", null, \"By default, Docker daemon requires root privileges. Sometimes users don't want to provide every time a password when attempting to run a container \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://askubuntu.com/questions/477551/how-can-i-use-docker-without-sudo\"\n  }, \"just like in this post\"), \".\"), mdx(\"p\", null, \"There are few things to consider here:\"), mdx(\"h3\", {\n    \"id\": \"only-trusted-users-should-be-allowed-to-control-your-docker-daemon\"\n  }, \"Only trusted users should be allowed to control your Docker daemon\"), mdx(\"p\", null, \"This is a bad practice, because an attacker might set up shared folders to your \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"root directory\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/\"), \"\\nThen from the app/container context it could modify your host filesystem without any obstacles, e.g. create a new - more vulnerable container.\"), mdx(\"p\", null, \"He could for example interact with Docker daemon socket in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/var/run/docker.sock\"), \" With that, the attacker would have a full control of the host machine.\"), mdx(\"h2\", {\n    \"id\": \"dont-configure-a-service-blindly-before-getting-to-know-it-better\"\n  }, \"Don't configure a service blindly before getting to know it better\"), mdx(\"p\", null, \"Misconfigurations are part of OWASP TOP 10, and these.\\nSome configuration you'd like to perform may seem complex, in that case the solution is simple, don't use complex configurations, because there could be a lot of potential places to make mistakes\"), mdx(\"p\", null, \"Also, do your own research on dependencies\"), mdx(\"h2\", {\n    \"id\": \"linux-kernel-capabilities\"\n  }, \"Linux kernel capabilities.\"), mdx(\"p\", null, \"By default, Docker runs containers with a restricted set of capabilities.\"), mdx(\"p\", null, \"The capabilities itself simply provide implementation of The Least Privilege Principle.\\nFor example, network service that binds to a port doesn't need root permissions, it only needs \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"net_bind_service\"), \" capability.\"), mdx(\"p\", null, \"The secure-by-default implementation of Docker Capabilities is amazing, and It even makes it better than running ssh daemon, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cron\"), \" on a host machine.\"), mdx(\"p\", null, \"But the default set of capabilities may still not provide full isolation of the app, therefore We can remove the capabilities from the allow list.\"), mdx(\"p\", null, \"But \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"beware with adding new capabilities\"), \", make sure the capability is 100% needed for the application to run properly.\"), mdx(\"h2\", {\n    \"id\": \"running-docker-images-with--privileged-flag\"\n  }, \"Running docker images with \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"-privileged\"), \" flag\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"do not run docker images with \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"-privileged\"), \" flag!\")), mdx(\"p\", null, \"Instead, run it with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u2013no-new-privileges\")), mdx(\"h2\", {\n    \"id\": \"not-keeping-our-images-up-to-date\"\n  }, \"Not keeping our images up-to-date\"), mdx(\"p\", null, \"This goes without saying, having updates also provide us with security patches of the applications, cmdline tools our container needs.\"), mdx(\"p\", null, \"This though should not mean running always image with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":latest\"), \" tag, because it can bring on other issues with Availability. More on that on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://derickbailey.com/2017/05/10/never-use-the-latest-image-from-docker-hub/\"\n  }, \"derick's blog-post\")), mdx(\"h2\", {\n    \"id\": \"not-disabling-inter-container-communication\"\n  }, \"Not disabling inter-container communication.\"), mdx(\"p\", null, \"It can be done with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--icc=false\")), mdx(\"p\", null, \"By default it is enabled, meaning that all containers can talk with each other using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker0 bridged network\")), mdx(\"p\", null, \"If some containers need communication, they can be specified with\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--link=CONTAINER_NAME_or_ID:ALIAS\")), mdx(\"h2\", {\n    \"id\": \"not-limiting-dos-attacks\"\n  }, \"Not limiting DoS attacks.\"), mdx(\"p\", null, \"Docker daemon assigns resources if needed automatically, which is a good thing, but in the DoS attack scenario, the Docker daemon will request too much RAM and CPU than a Host machine can provide, resulting in killing/restarting the process on Host by the kernel.\"), mdx(\"p\", null, \"It can be done with limiting container's access to memory with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--memory=\"), \" flag,\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--memory-swap\")), mdx(\"p\", null, \"Also, We can limit maximum number of restarts with\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--restart=on-failure:<number_of_restarts>\")), mdx(\"p\", null, \"flag\\nand maximum number of processes with\"), mdx(\"p\", null, \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--ulimit nproc=<number>\")), mdx(\"h2\", {\n    \"id\": \"not-setting-filesystem-and-volumes-to-read-only\"\n  }, \"Not setting filesystem and volumes to read-only.\"), mdx(\"p\", null, \"Can be done with\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--read-only\"), \" flag when performing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker run\"), \".\"), mdx(\"p\", null, \"If it has to save something, we can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--tmpfs /tmp\"), \" flag with /tmp directory.\"), mdx(\"h2\", {\n    \"id\": \"not-signing-an-image\"\n  }, \"Not signing an image\"), mdx(\"p\", null, \"If someone happens to get to the Host OS some way, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"We should sign our container images\"), \" to prevent them from tampering with this image and modifying its behavior\"), mdx(\"h2\", {\n    \"id\": \"other-places-to-look-for\"\n  }, \"Other places to look for:\"), mdx(\"h3\", {\n    \"id\": \"security-of-image-registry\"\n  }, \"Security of IMAGE REGISTRY\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keeping them private\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Monitor the registry\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Also provide Security of Host System hosting IMAGE REGISTRY\")), mdx(\"h3\", {\n    \"id\": \"not-monitoring-network-around-containers\"\n  }, \"Not monitoring Network around containers\"), mdx(\"p\", null, \"E.g. with Prometheus\"), mdx(\"h3\", {\n    \"id\": \"security-of-container-orchestration\"\n  }, \"Security of Container Orchestration\"), mdx(\"p\", null, \"More on that in a future blog-post\"), mdx(\"h2\", {\n    \"id\": \"references\"\n  }, \"References\"), mdx(\"p\", null, \"The knowledge I provide here is not mine of course, the best resources that I found valuable were:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html\"\n  }, \"OWASP Docker Security Docs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=JE2PJbbpjsM\"\n  }, \"DevOps Directive's awesome video!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.docker.com/engine/security/\"\n  }, \"Docker Security Docs\"))), mdx(\"h2\", {\n    \"id\": \"summary\"\n  }, \"Summary\"), mdx(\"p\", null, \"Docker containers are mostly secure-by-default, but We shouldn't underestimate the importance of Host system where they are being run, and also the importance of stripping these images even more like we would do with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"distroless\"), \" concept.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"05773c01-274e-50f8-bf83-e77e09b69d5b","fields":{"slug":"/Old-Posts/2021-05-17-Security-Of-Docker-Containers","title":"Start by building the application."}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Basics of Kubernetes Part 2\",\n  \"date\": \"2021-05-24 06:46:00 +0100\",\n  \"categories\": [\"DevSecOps\", \"Kubernetes\"],\n  \"tags\": [\"devsecops\", \"kubernetes\", \"containers\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"connecting-to-the-podapp\"\n  }, \"Connecting to the Pod/App.\"), mdx(\"p\", null, \"We know from previous blog-post, that because Pods are disappearing, redeployed all the time we can't directly connect to them via IP - these are changing constantly.\"), mdx(\"p\", null, \"We then discussed a topic of Networking \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Service Object\")), mdx(\"p\", null, \"The Service Object from the Host/front-end perspective, acts as a static IP address, where from the Pod's/back-end's perspective it acts as a Load Balancer, assigning the resources and with that also IPs dynamically.\"), mdx(\"p\", null, \"When we connect to the Pods through Service Object, we do that using \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ClusterIP\"), \", but also \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DNS name\"), \" assigned to this IP.\"), mdx(\"p\", null, \"The DNS names are then transmitted to the Front-end Pods/Host config files like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/resolv.conf\"), \". Thus, every Pod knows how to resolve these addresses.\"), mdx(\"h3\", {\n    \"id\": \"communication-between-apps\"\n  }, \"Communication between Apps\"), mdx(\"p\", null, \"To better illustrate resolving DNS names between Apps:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"App2 Node wants to communicate with App1 Node\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"It then sends a query to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Cluster DNS\"), \" server and asks - \\\"I want to communicate with app1.svc, give me app1.svc IP address\\\"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The ClusterDNS resolves this DNS name to a IP address and returns it to the App2 Node\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"With having the IP address of the App1 (His Service Network Object), the App2 sends a request to the App1 Service Network Object with their query to the App.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The Network Objects then queries one of the Pods and returns the results back to the App2 Node\")), mdx(\"h3\", {\n    \"id\": \"communication-between-apppods-and-host-system-on-the-same-network\"\n  }, \"Communication between App/Pods and Host system on the same network.\"), mdx(\"p\", null, \"This doesn't involve ClusterDNS, instead, it uses a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NodePort\"), \".\"), mdx(\"p\", null, \"All the nodes running are having the same Open Port. So, the communication is as follows:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"From the Host Machine, we send request to any Node on that Port\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Then it is routed to the Pod's Service Network Object, and then to the one of the Pods behind the Service\")), mdx(\"h4\", {\n    \"id\": \"imperative-way-of-doing-it\"\n  }, \"Imperative way of doing it:\"), mdx(\"p\", null, \"With command:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl expose pod <pod_name> --name=<chosen_service_name> --target-port=8080 --type=NodePort\")), mdx(\"p\", null, \"The port we specify above is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"from the Pod's perspective\"), \", If we want to see the port that is mapped to our host machine, we can check it with command:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl get svc\")), mdx(\"p\", null, \"And there you'll see your service with the service name you specified, with the mapped port.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/CH1Fck2.png\",\n    \"alt\": \"get-svc\"\n  })), mdx(\"h4\", {\n    \"id\": \"declarative-way-of-doing-it\"\n  }, \"Declarative way of doing it:\"), mdx(\"p\", null, \"Setting the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type: NodePort\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec:\"), \" object\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"apiVersion: v1\\nkind: Service\\nmetadata:\\n  name: ps-nodeport\\nspec:\\n  type: NodePort\\n  ports:\\n  - port: 80\\n    targetPort: 8080\\n    nodePort: 31111\\n    protocol: TCP\\n  selector:\\n    app: web\\n\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"port: 80\"), \" - refers to the port App listens on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"inside the cluster\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"targetPort: 8080\"), \" - refers the port App listens on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"inside the container\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"targetPort: 31111\"), \" - refers to the port Nodes listens on for our Host machine.\"), mdx(\"h3\", {\n    \"id\": \"communication-between-apppods-and-host-system-over-the-internet\"\n  }, \"Communication between App/Pods and Host system over the Internet.\"), mdx(\"p\", null, \"It uses \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Load Balancer\"), \".\"), mdx(\"p\", null, \"The Load Balancer integrates with Cloud Load Balancers\"), mdx(\"p\", null, \"It doesn't require much configuration, only to specify \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type: LoadBalancer\"), \" in the yaml file, withing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec:\"), \" object\"), mdx(\"p\", null, \"Well... it does require one thing - That the cloud implements Load Balancing, but most of the cloud provide it!\"), mdx(\"h2\", {\n    \"id\": \"kubernetes-deployment\"\n  }, \"Kubernetes Deployment\"), mdx(\"p\", null, \"K8s Deployment Service provide us a way of interacting with the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"replica sets\"), \".\"), mdx(\"p\", null, \"Replica sets stores a meta-data of desired state. It also watches this desired state constantly and at the same time It does scaling and self-healing.\"), mdx(\"p\", null, \"So the Deployment Service is used mostly to update the meta-data to be stored in replica sets.\\nWith it, We can also do rollback of the Deployment Manifest\"), mdx(\"p\", null, \"When We declare in the Deployment Service Manifest that we want a smaller amount of replicas e.g. 3, but we had 6, then the 3 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"replicas will become inactive, but not deleted\"), \". This is to make the possibility of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"rollbacks\")), mdx(\"h3\", {\n    \"id\": \"writing-deployment-controller-manifest\"\n  }, \"Writing Deployment Controller Manifest\"), mdx(\"p\", null, \"In Earlier blog-post when we were deploying Guestbook, we used this one:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"apiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: mongo\\n  labels:\\n    app.kubernetes.io/name: mongo\\n    app.kubernetes.io/component: backend\\nspec:\\n  selector:\\n    matchLabels:\\n      app.kubernetes.io/name: mongo\\n      app.kubernetes.io/component: backend\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app.kubernetes.io/name: mongo\\n        app.kubernetes.io/component: backend\\n    spec:\\n      containers:\\n      - name: mongo\\n        image: mongo:4.2\\n        args:\\n          - --bind_ip\\n          - 0.0.0.0\\n        resources:\\n          requests:\\n            cpu: 100m\\n            memory: 100Mi\\n        ports:\\n        - containerPort: 27017\\n\\n\")), mdx(\"p\", null, \"I don't think I'll be writing about the same thing again, sorry, it just seems unlogical to me.\"), mdx(\"p\", null, \"But let's add, that we can update this Manifest file and apply it with command:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl apply -f deployment.yml\"), \"\\nAnd the replicas will update their data like desired state if necessary, without any drop of the services, so amazing!\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"301444bb-e6d2-5d4f-ad8f-3dbc397fb27b","fields":{"slug":"/Old-Posts/2021-05-24-Kubernetes-Basics-Hands-On-Part-2","title":"2021-05-24-Kubernetes-Basics-Hands-On-Part-2"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Making Rules For IPtables Firewall with UFW\",\n  \"date\": \"2021-06-13 06:46:00 +0100\",\n  \"categories\": [\"DevSecOps\", \"Firewall\"],\n  \"tags\": [\"devsecops\", \"firewall\", \"iptables\", \"ufw\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"why-ufw\"\n  }, \"Why UFW?\"), mdx(\"p\", null, \"There are at least two (That's how many I know) ways to configure iptables rules:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"By \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"iptables\"), \" command itself\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"By \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ufw\"), \" - \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Uncomplicated Firewall\"), \" - which is also a commands tool, but it simplifies is a lot.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Instead of running iptables command with flags; e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"iptables -A INPUT\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-s <IP> -j ACCEPT\"), \", we are simply typing combination of keywords such as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo ufw allow from <IP> to any\"), \". Which is way more understandable.\")))), mdx(\"h2\", {\n    \"id\": \"setting-it-up\"\n  }, \"Setting it up:\"), mdx(\"h3\", {\n    \"id\": \"installing\"\n  }, \"Installing\"), mdx(\"p\", null, \"With\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo apt-get install ufw\"), \" - Debian\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo pacman -Syu ufw\"), \" - Arch Linux\")), mdx(\"h3\", {\n    \"id\": \"enabling-the-ufw-service\"\n  }, \"Enabling the ufw service.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"systemctl enable ufw\"), \" - If you're using systemd - most of you're using it by default.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ufw enable\"), \" - will make ufw active\")), mdx(\"h3\", {\n    \"id\": \"most-used-commands-in-ufw\"\n  }, \"Most used commands in UFW\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo ufw status\"), \" - Gives us basic firewall rules. In the beginning you'll see that the output is simply \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Status: active\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imgur.com/3rKrNHk.png\",\n    \"alt\": \"status\"\n  })), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo ufw status numbered\"), \" - Will provide us with a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"numbered list\"), \". While deleting the rules, we can refer to these numbers, instead of retyping the whole rule with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo ufw delete rule 5\"), \" - this is pretty handy I'd say!\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"IMPORTANT: \"), \" It should be mentioned that these rules are interpreted one by one. So if the 2nd rule denies all traffic for all the network e.g. from IPs 192.168.1.0/24, and then 3rd rule accepts traffic from the ip 192.168.1.2. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Then the host 192.168.1.2 WILL STILL BE BLOCKED\"))), mdx(\"h3\", {\n    \"id\": \"resetting-ufw\"\n  }, \"Resetting UFW\"), mdx(\"p\", null, \"If anything goes wrong, or you want to revert any changes to defaults, you can do that.\\nBut before, it is a good practice to disable UFW, so that deleting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ALLOW\"), \" rules won't block our way with ssh connection\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo ufw disable\"), \"\\nand then:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo ufw reset\")), mdx(\"h3\", {\n    \"id\": \"configuring-ufw-policies\"\n  }, \"Configuring UFW Policies\"), mdx(\"p\", null, \"Configuring Uncomplicated Firewall Policies is done through config file!\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nano /etc/default/ufw\"), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The default policy of ufw is to DENY EVERYTHING\"), \" - which is definitely a good policy. We shouldn't change that, instead we should remember to  \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"not have ufw enabled, while configuring ufw.\"), \". So make sure you execute \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo ufw disable\"), \" before proceeding to more strict rule-making.\"), mdx(\"h3\", {\n    \"id\": \"the-basics-of-rule-making-with-ufw\"\n  }, \"The basics of Rule-Making with UFW\"), mdx(\"p\", null, \"We do it via Command Line Interface (CLI).\"), mdx(\"p\", null, \"The basic syntax is\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo ufw (allow | deny) (<protocol_name> | from <ip_address> | <port_number>)\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"|\"), \" in parenthesis means that we can choose between these options and combine them!. Here're examples that would make it easier for you to understand:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo ufw allow ssh\"), \" - Would allow incoming traffic to the port of ssh (which is 22 by default) - But you can also provide a port number instead of protocol name\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo ufw allow ssh\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo ufw allow from 1.2.3.4 to any port 22\"), \" - \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"So we can combine these parameters\"), \". Here we say that we allow communication from the stated-ip to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"any\"), \" other ip on port 22\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo ufw allow from 1.2.3.4 to 4.3.2.1 port 22\"), \" - would result limit the destination ip to only \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"4.3.2.1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"1.2.3.4\"), \" on port 22\", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"When configuring access through an ip-address - \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MAKE SURE IT IS STATIC, AND NOT DHCP\"), \" - Meaning that It won't change after one week. If it did, then ufw would block your connection to the server \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"until\"), \" you change your IP again to the one you've set rule for.\")))), mdx(\"p\", null, \"You might ask yourself - \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What If I want in\")), mdx(\"h3\", {\n    \"id\": \"other-options-for-ufw\"\n  }, \"Other options for ufw\"), mdx(\"h4\", {\n    \"id\": \"limit\"\n  }, \"limit\"), mdx(\"p\", null, \"Provide you with one of the solution to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"mitigate DoS\"), \" attacks.\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"limit\"), \" option will limit the connections - \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"by default\"), \" it's \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"6 connections in the span of 30 seconds\"), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo ufw limit 80/tcp\"), \" - Will act as we discussed above - It limit the http connection to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"6 per 30 seconds.\")), mdx(\"h4\", {\n    \"id\": \"reject-vs-deny\"\n  }, \"reject vs deny\"), mdx(\"p\", null, \"The main difference is that when doing reject, We're \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"informing the host that the connection got rejected\"), \". When in the case of deny, we're simply ignoring it.\\n| reject                               | deny                                                       |\\n| ----------------------------------- | ---------------------------------------------------------- |\\n| we inform that connection is blocked | we don't inform that connection is blocked; we just ignore |\\n|                                      |                                                            |\"), mdx(\"h4\", {\n    \"id\": \"reload\"\n  }, \"reload\"), mdx(\"p\", null, \"You might ask yourself - \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Why do we need reload option, if all of the rules apply immediately\"), \" (if ufw is enabled).\"), mdx(\"p\", null, \"Yes, they're, but the reload option is mostly used when we have performed changes to the configuration. When we have changed for example the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DEFAULT_INPUT_POLICY= \"), \" or have disabled IPv6 support with setting up \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IPv6=no\"), \". Then it is just one command to reload this configuration, instead of two.\"), mdx(\"h4\", {\n    \"id\": \"allow-out-and-allow-in\"\n  }, \"Allow Out and Allow In\"), mdx(\"p\", null, \"You might want to separate incoming and outgoing rules.\\nYou can do that with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"allow out\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"allow in\"), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ufw allow in on eth0 from 192.168.0.3\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ufw deny out on eth0 from 192.168.0.3\")), mdx(\"h4\", {\n    \"id\": \"reading-logs-of-ufw\"\n  }, \"Reading logs of UFW\"), mdx(\"p\", null, \"First we should make sure that logging is enabled, by\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo ufw logging on\"), \"\\nI think, that the easiest way to see them is to read it from the kernel buffer with:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo dmesg | grep '\\\\[UFW]'\")), mdx(\"p\", null, \"But these logs \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"could be also\"), \" in folder \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/var/log\"), \", in files starting with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ufw*\"), \" - You can list those sudo \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ls /var/log/ufw*\"), \".\"), mdx(\"h4\", {\n    \"id\": \"other-addons-for-iptables\"\n  }, \"Other Addons for iptables\"), mdx(\"p\", null, \"Remember, that ufw is made to work well with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"iptables\"), \" rules. And \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"was designed to make rules in iptables easier\"), \". We could say, that ufw is an addon to iptables\"), mdx(\"p\", null, \"And likewise, there're other addons to iptables like:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.cipherdyne.com/fwsnort/\"\n  }, \"fwsnort\"), \" - That is the implementation of IDS/IPS for iptables\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.cipherdyne.com/psad/\"\n  }, \"psad\"), \" - For Intrusion Detection, and better Log Analysis with iptables\")), mdx(\"h2\", {\n    \"id\": \"sure-it-wont-build-rules-for-you-dynamically-but-its-a-great-start-to-learn-these-addons---knowledge-is-power-and-youll-need-to-acquire-it-anyway\"\n  }, \"Sure, it won't build rules for you dynamically, \", mdx(\"strong\", {\n    parentName: \"h2\"\n  }, \"but it's a great start to learn these addons\"), \" - Knowledge is power and you'll need to acquire it anyway.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"afa5c4a2-98e2-51eb-98a3-81330b3a81ad","fields":{"slug":"/Old-Posts/2021-06-13-Making-Rules-For-IPTables-Firewall-With-UFW","title":"2021-06-13-Making-Rules-For-IPTables-Firewall-With-UFW"}}}],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"HOW-TO-READ-THIS-BLOG\",\n  \"tags\": \"permanent-note\",\n  \"references\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-to-read-this-blog\"\n  }, \"HOW-TO-READ-THIS-BLOG\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"As you can see you can click various links, and some of them spawn a blog-post next to the blog-post in which you were in!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can also access a \\\"Graph-View\\\" - which shows the structure of the notes, blog-posts, and write-ups\")), mdx(\"h2\", {\n    \"id\": \"hotkeys\"\n  }, \"Hotkeys\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Alt + Left-Arrow\"), \" - To move to the previous blog post / Pane\")), mdx(\"p\", null, \"You can also be \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Using-Vim-Hotkeys-on-the-Blog\",\n    \"title\": \"Using Vim Hotkeys on the Blog\"\n  }, \"[[Using Vim Hotkeys on the Blog]]\"), \" <- EASY!\"), mdx(\"h2\", {\n    \"id\": \"using-mocs-efficiently\"\n  }, \"Using MOCs efficiently\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are a lot of MOCs, which you can bookmark in your browser. This way if you're interested in a particular topic, you don't need to navigate to it from the MAIN-PAGE :)\")), mdx(\"h2\", {\n    \"id\": \"old-posts-from-previous-blog\"\n  }, \"Old Posts From Previous Blog\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Old-Posts-From-Previous-Blog\",\n    \"title\": \"Old Posts From Previous Blog\"\n  }, \"[[Old Posts From Previous Blog]]\"), \" <- To be reviewed and deleted\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"8460bf70-9691-5a50-a7ae-2a73d97a401a","fields":{"slug":"/HOW-TO-READ-THIS-BLOG","title":"HOW-TO-READ-THIS-BLOG"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"HELLO WORLD\",\n  \"tags\": \"permanent-note publish\",\n  \"references\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"welcome-to-my-blog\"\n  }, \"WELCOME TO MY BLOG!\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Aka Knowledge Base / Garden\")), mdx(\"h2\", {\n    \"id\": \"it-security-section\"\n  }, \"IT Security Section\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/IT-Security-Section\",\n    \"title\": \"IT Security Section\"\n  }, \"[[IT Security Section]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"not-related\"\n  }, \"Not-Related\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Not-Related-Section\",\n    \"title\": \"Not-Related Section\"\n  }, \"[[Not-Related Section]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"what-is-the-purpose-of-this-blog\"\n  }, \"What is the Purpose of This Blog?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To collects meaningful thoughts, that can be connected together.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It fixes the problem that current blog website has, which is the lack of proper structure and many other aspects -> \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/What-Most-Blog-Websites-Lacks\",\n    \"title\": \"What Most Blog Websites Lacks\"\n  }, \"[[What Most Blog Websites Lacks]]\"), \"\")), mdx(\"p\", null, \"You're probably wondering, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/HOW-TO-READ-THIS-BLOGorhow-to-read-this-blog\",\n    \"title\": \"HOW-TO-READ-THIS-BLOG|how to read this blog\"\n  }, \"[[HOW-TO-READ-THIS-BLOG|how to read this blog]]\"), \" <- Click this link and learn! \"), mdx(\"h2\", {\n    \"id\": \"posts-from-the-previous-website-that-hasnt-been-reviewed-yet\"\n  }, \"Posts From The Previous Website That Hasn't Been Reviewed Yet\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Old-Posts-From-Previous-Blog\",\n    \"title\": \"Old Posts From Previous Blog\"\n  }, \"[[Old Posts From Previous Blog]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"e0a8d014-bf39-52a6-a821-6c42e3843bf3","fields":{"slug":"/HELLO-WORLD","title":"WELCOME TO MY BLOG!"}}}]},"fields":{"slug":"/Old Posts From Previous Blog","title":"Old Posts From Previous Blog"}}},"pageContext":{"id":"1e197c1d-7688-55e9-8881-78b0077a5007"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}